// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
let Verifier = artifacts.require("Verifier");

contract("Verifier", (accounts) =>{
    const deployer = accounts[0];

    describe('verify the solidity contract generated by Zokrates executed successfully', () => {
        beforeEach(async () => {
            this.contract = await Verifier.new({ from: deployer });
        });

        // Test verification with correct proof
        it('Test verification with correct proof', async () => {
            // - use the contents from proof.json generated from zokrates steps
            const proof = require('../../zokrates/code/square/proof.json');

            let verified = await this.contract.verifyTx.call(
                proof.proof.a,
                proof.proof.b,
                proof.proof.c,
                proof.inputs
            );
            assert.equal(verified, true, "Correct proof was not verified");
        });

        // Test verification with incorrect proof
        it('Test verification with incorrect proof', async () => {
            const fakeProof = require('../../zokrates/code/square/fakeProof.json');
            let verified = await this.contract.verifyTx.call(
                fakeProof.proof.a,
                fakeProof.proof.b,
                fakeProof.proof.c,
                fakeProof.inputs
            );
            assert.equal(verified, false, "Incorrect proof was verified");
        });
    });
});
