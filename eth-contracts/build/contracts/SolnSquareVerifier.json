{
  "contractName": "SolnSquareVerifier",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransfered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "triggerer",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        }
      ],
      "name": "SolutionAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "triggerer",
          "type": "address"
        }
      ],
      "name": "UnPaused",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "baseTokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "approved",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "minted",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bool",
          "name": "isPaused",
          "type": "bool"
        }
      ],
      "name": "setPaused",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256[2]",
          "name": "a",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256[2][2]",
          "name": "b",
          "type": "uint256[2][2]"
        },
        {
          "internalType": "uint256[2]",
          "name": "c",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256[2]",
          "name": "input",
          "type": "uint256[2]"
        }
      ],
      "name": "verifyTx",
      "outputs": [
        {
          "internalType": "bool",
          "name": "r",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "solutionExists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "exists",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256[2]",
          "name": "a",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256[2][2]",
          "name": "b",
          "type": "uint256[2][2]"
        },
        {
          "internalType": "uint256[2]",
          "name": "c",
          "type": "uint256[2]"
        },
        {
          "internalType": "uint256[2]",
          "name": "input",
          "type": "uint256[2]"
        }
      ],
      "name": "addSolution",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mintNFT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "minted",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransfered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"triggerer\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"SolutionAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"triggerer\",\"type\":\"address\"}],\"name\":\"UnPaused\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"a\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2][2]\",\"name\":\"b\",\"type\":\"uint256[2][2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"c\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"input\",\"type\":\"uint256[2]\"}],\"name\":\"addSolution\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"baseTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"minted\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mintNFT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"minted\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"isPaused\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"solutionExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"exists\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"a\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2][2]\",\"name\":\"b\",\"type\":\"uint256[2][2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"c\",\"type\":\"uint256[2]\"},{\"internalType\":\"uint256[2]\",\"name\":\"input\",\"type\":\"uint256[2]\"}],\"name\":\"verifyTx\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"r\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"implement supportsInterface(bytes4) using a lookup table\"},\"tokenByIndex(uint256)\":{\"details\":\"Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the tokens list\"},\"return\":\"uint256 token ID at the given index of the tokens list\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Gets the token ID at a given index of the tokens list of the requested owner\",\"params\":{\"index\":\"uint256 representing the index to be accessed of the requested tokens list\",\"owner\":\"address owning the tokens list to be accessed\"},\"return\":\"uint256 token ID at the given index of the tokens list owned by the requested address\"},\"totalSupply()\":{\"details\":\"Gets the total amount of tokens stored by the contract\",\"return\":\"uint256 representing the total amount of tokens\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/home/lium/Dev/Udacity/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol\":\"SolnSquareVerifier\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/lium/Dev/Udacity/Blockchain-Capstone/eth-contracts/contracts/ERC721Mintable.sol\":{\"keccak256\":\"0x5da222d04ad430f7a7caafae91acceff35b90ca012049594c89981a8a879fec4\",\"urls\":[\"bzz-raw://5fcd3e7c1fde28cd63f1060d53f296fb4af0e272309cc05af77d4efda203aa92\",\"dweb:/ipfs/QmPyBmJEQihT7cyV8biksfCFEUst6TgT2KSMgMBC3CRE6X\"]},\"/home/lium/Dev/Udacity/Blockchain-Capstone/eth-contracts/contracts/Oraclize.sol\":{\"keccak256\":\"0x2d789d05a6230e28f16ae2b801bc55c6e08fbb77964b1828927fb9aad6906f3f\",\"urls\":[\"bzz-raw://a00caa36dd0e30708daf2bc9895dafeab08fbbf531840176d01b549e31e199e5\",\"dweb:/ipfs/QmcgozvqNBSMaAEZnGS71FAjwHp2QWtiTqCFn7rYLWNpLs\"]},\"/home/lium/Dev/Udacity/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol\":{\"keccak256\":\"0x69e78eda9f67fee847bb28c36a5b58ddee7fc4ac61cb5726fb846cf7cd2fd831\",\"urls\":[\"bzz-raw://d1956098fc8d39f9dc59cb89fe82e6cc7aa821f9f24a81a1bfe8bba619d365de\",\"dweb:/ipfs/QmUqAB4yVxTDWSd7MAXLTTVGXdoS3oqj7338vx2ALGrqom\"]},\"/home/lium/Dev/Udacity/Blockchain-Capstone/zokrates/code/square/verifier.sol\":{\"keccak256\":\"0x69532467826f3b92276d0d8527feeffe7d64d8922b12d0d1fa91f6b9c3464f66\",\"urls\":[\"bzz-raw://63cabd94d0677e9d89915ee7af3197a41b5877e30b760fd53a04a80740b494d8\",\"dweb:/ipfs/QmbsL2zw6GJNt74C9oy8j3RmvTpEWHY8LwXzR92r4pyfwv\"]},\"@openzeppelin/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x5be8533c5950173dc2b77b75108fae6e6c5449aedadde3385ba457394aad2384\",\"urls\":[\"bzz-raw://d429fb04f5b31d909dc759d0f88e28055b80b4dd43e5def4dffc947fa0609229\",\"dweb:/ipfs/QmaY9idX5CwLLtjjTQAdiiaDSrncgafkatUZXTbbajpz8b\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x042048c375daca04b31e31c91bbae912b84b5eb818c4e31b2deb530fd2305342\",\"urls\":[\"bzz-raw://d877a87c5e29b9ffca3e334378058c051a4e012fd3635039681003a9376baf1f\",\"dweb:/ipfs/QmR45snf93cFXtB71TZcmoGy9DbcMha8CqgkDKaLvhjXZK\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x1a8e5072509c5ea7365eb1d48030b9be865140c8fb779968da0a459a0e174a11\",\"urls\":[\"bzz-raw://03335b7b07c7c8c8d613cfdd8ec39a0b5ec133ee510bf2fe6cc5a496767bef4b\",\"dweb:/ipfs/Qmebp4nzPja645c9yXSdJkGq96oU3am3LUnG2K3R7XxyKf\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162004c2738038062004c27833981810160405260408110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b838201915060208201858111156200006f57600080fd5b82518660018202830111640100000000821117156200008d57600080fd5b8083526020830192505050908051906020019080838360005b83811015620000c3578082015181840152602081019050620000a6565b50505050905090810190601f168015620000f15780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200011557600080fd5b838201915060208201858111156200012c57600080fd5b82518660018202830111640100000000821117156200014a57600080fd5b8083526020830192505050908051906020019080838360005b838110156200018057808201518184015260208101905062000163565b50505050905090810190601f168015620001ae5780820380516001836020036101000a031916815260200191505b50604052505050818181816040518060600160405280603f815260200162004be8603f9139336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f0d18b5fd22306e373229b9439188228edca81207d1667f604daf6cef8aa3ee6760008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a160008060146101000a81548160ff021916908315150217905550620002fe6301ffc9a760e01b6200039e60201b60201c565b620003166380ac58cd60e01b6200039e60201b60201c565b6200032e63780e9d6360e01b6200039e60201b60201c565b82600f9080519060200190620003469291906200043e565b5081601090805190602001906200035f9291906200043e565b508060119080519060200190620003789291906200043e565b5062000391635b5e139f60e01b6200039e60201b60201c565b50505050505050620004ed565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161415620003d257600080fd5b6001806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200048157805160ff1916838001178555620004b2565b82800160010185558215620004b2579182015b82811115620004b157825182559160200191906001019062000494565b5b509050620004c19190620004c5565b5090565b620004ea91905b80821115620004e6576000816000905550600101620004cc565b5090565b90565b6146eb80620004fd6000396000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c80634f6ccce7116100f9578063a22cb46511610097578063d547cfb711610071578063d547cfb714610d71578063e985e9c514610df4578063f2fde38b14610e70578063f76b443114610eb4576101a9565b8063a22cb46514610b75578063b88d4fde14610bc5578063c87b56dd14610cca576101a9565b806370a08231116100d357806370a08231146109f457806377387c5114610a4c578063893d20e814610aa857806395d89b4114610af2576101a9565b80634f6ccce7146107cb578063621e9ec01461080d5780636352211e14610986576101a9565b806323b872dd1161016657806338bbfa501161014057806338bbfa50146105355780633c168eab1461069157806340c10f19146106f757806342842e0e1461075d576101a9565b806323b872dd146103a057806327dc297e1461040e5780632f745c59146104d3576101a9565b806301ffc9a7146101ae57806306fdde0314610213578063081812fc14610296578063095ea7b31461030457806316c38b3c1461035257806318160ddd14610382575b600080fd5b6101f9600480360360208110156101c457600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050611015565b604051808215151515815260200191505060405180910390f35b61021b61107d565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561025b578082015181840152602081019050610240565b50505050905090810190601f1680156102885780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102c2600480360360208110156102ac57600080fd5b810190808035906020019092919050505061111f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103506004803603604081101561031a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506111d7565b005b6103806004803603602081101561036857600080fd5b810190808035151590602001909291905050506113b0565b005b61038a611544565b6040518082815260200191505060405180910390f35b61040c600480360360608110156103b657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611551565b005b6104d16004803603604081101561042457600080fd5b81019080803590602001909291908035906020019064010000000081111561044b57600080fd5b82018360208201111561045d57600080fd5b8035906020019184600183028401116401000000008311171561047f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611574565b005b61051f600480360360408110156104e957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506115b7565b6040518082815260200191505060405180910390f35b61068f6004803603606081101561054b57600080fd5b81019080803590602001909291908035906020019064010000000081111561057257600080fd5b82018360208201111561058457600080fd5b803590602001918460018302840111640100000000831117156105a657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561060957600080fd5b82018360208201111561061b57600080fd5b8035906020019184600183028401116401000000008311171561063d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061162a565b005b6106dd600480360360408110156106a757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061162f565b604051808215151515815260200191505060405180910390f35b6107436004803603604081101561070d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506117fe565b604051808215151515815260200191505060405180910390f35b6107c96004803603606081101561077357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506118c2565b005b6107f7600480360360208110156107e157600080fd5b81019080803590602001909291905050506118e2565b6040518082815260200191505060405180910390f35b61096c600480360361014081101561082457600080fd5b8101908080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908060800190600280602002604051908101604052809291906000905b828210156108d9578382604002016002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505081526020019060010190610885565b50505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050509192919290505050611916565b604051808215151515815260200191505060405180910390f35b6109b26004803603602081101561099c57600080fd5b8101908080359060200190929190505050611b12565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610a3660048036036020811015610a0a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b4f565b6040518082815260200191505060405180910390f35b610a8e60048036036020811015610a6257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b9f565b604051808215151515815260200191505060405180910390f35b610ab0611c0b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610afa611c34565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610b3a578082015181840152602081019050610b1f565b50505050905090810190601f168015610b675780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610bc360048036036040811015610b8b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611cd6565b005b610cc860048036036080811015610bdb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610c4257600080fd5b820183602082011115610c5457600080fd5b80359060200191846001830284011164010000000083111715610c7657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611e10565b005b610cf660048036036020811015610ce057600080fd5b8101908080359060200190929190505050611e36565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610d36578082015181840152602081019050610d1b565b50505050905090810190601f168015610d635780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610d79611efd565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610db9578082015181840152602081019050610d9e565b50505050905090810190601f168015610de65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610e5660048036036040811015610e0a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611f9f565b604051808215151515815260200191505060405180910390f35b610eb260048036036020811015610e8657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612033565b005b6110136004803603610140811015610ecb57600080fd5b8101908080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908060800190600280602002604051908101604052809291906000905b82821015610f80578382604002016002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505081526020019060010190610f2c565b50505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929050505061227a565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6060600f8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111155780601f106110ea57610100808354040283529160200191611115565b820191906000526020600020905b8154815290600101906020018083116110f857829003601f168201915b5050505050905090565b600061112a8261268f565b61119c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f34303420546f6b656e206e6f7420666f756e642100000000000000000000000081525060200191505060405180910390fd5b6003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006111e282611b12565b90508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611269576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061463e6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806112a957506112a88133611f9f565b5b6112fe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602381526020018061461b6023913960400191505060405180910390fd5b826003600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611455576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806146646021913960400191505060405180910390fd5b80600060146101000a81548160ff02191690831515021790555080156114dd577f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1611541565b7fff2b959f2bcdb44c7ecb4b16dae055431019d7350607125cfc2b74a06632c90e33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15b50565b6000600880549050905090565b61155b3382612701565b61156457600080fd5b61156f838383612796565b505050565b6115b3828260006040519080825280601f01601f1916602001820160405280156115ad5781602001600182028038833980820191505090505b5061162a565b5050565b60006115c283611b4f565b82106115cd57600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061161757fe5b9060005260206000200154905092915050565b505050565b60008060001b601460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154116116eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f34303420536f6c7574696f6e204e6f7420466f756e642100000000000000000081525060200191505060405180910390fd5b6000601460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154146117a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536f6c7574696f6e20616c72656164792068617320746f6b656e00000000000081525060200191505060405180910390fd5b6117ad83836127ba565b81601460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201819055506001905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146118a5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806146646021913960400191505060405180910390fd5b6118af83836127ba565b6118b8826127db565b6001905092915050565b6118dd83838360405180602001604052806000815250611e10565b505050565b60006118ec611544565b82106118f757600080fd5b6008828154811061190457fe5b90600052602060002001549050919050565b60006119206143b3565b60405180604001604052808760006002811061193857fe5b602002015181526020018760016002811061194f57fe5b60200201518152508160000181905250604051806040016040528060405180604001604052808860006002811061198257fe5b602002015160006002811061199357fe5b60200201518152602001886000600281106119aa57fe5b60200201516001600281106119bb57fe5b602002015181525081526020016040518060400160405280886001600281106119e057fe5b60200201516000600281106119f157fe5b6020020151815260200188600160028110611a0857fe5b6020020151600160028110611a1957fe5b60200201518152508152508160200181905250604051806040016040528085600060028110611a4457fe5b6020020151815260200185600160028110611a5b57fe5b6020020151815250816040018190525060606002604051908082528060200260200182016040528015611a9d5781602001602082028038833980820191505090505b50905060008090505b6002811015611ae557848160028110611abb57fe5b6020020151828281518110611acc57fe5b6020026020010181815250508080600101915050611aa6565b506000611af28284612938565b1415611b0357600192505050611b0a565b6000925050505b949350505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000611b98600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612aaa565b9050919050565b600060156000601460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154815260200190815260200160002060009054906101000a900460ff169050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060108054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611ccc5780601f10611ca157610100808354040283529160200191611ccc565b820191906000526020600020905b815481529060010190602001808311611caf57829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611d0f57600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b611e1b848484611551565b611e2784848484612ab8565b611e3057600080fd5b50505050565b6060611e418261268f565b611e4a57600080fd5b601260008381526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611ef15780601f10611ec657610100808354040283529160200191611ef1565b820191906000526020600020905b815481529060010190602001808311611ed457829003601f168201915b50505050509050919050565b606060118054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611f955780601f10611f6a57610100808354040283529160200191611f95565b820191906000526020600020905b815481529060010190602001808311611f7857829003601f168201915b5050505050905090565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146120d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806146646021913960400191505060405180910390fd5b3273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612179576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f53656e646572206d7573742062652061207265616c20636f6e7472616374000081525060200191505060405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f0d18b5fd22306e373229b9439188228edca81207d1667f604daf6cef8aa3ee678183604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15050565b6000848484846040516020018085600260200280838360005b838110156122ae578082015181840152602081019050612293565b505050509050018460026000925b818410156123025782846020020151600260200280838360005b838110156122f15780820151818401526020810190506122d6565b5050505090500192600101926122bc565b9250505083600260200280838360005b8381101561232d578082015181840152602081019050612312565b5050505090500182600260200280838360005b8381101561235b578082015181840152602081019050612340565b505050509050019450505050506040516020818303038152906040528051906020012090506015600082815260200190815260200160002060009054906101000a900460ff1615612414576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f536f6c7574696f6e20616c72656164792065786973747321000000000000000081525060200191505060405180910390fd5b61242085858585611916565b612492576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536f6c7574696f6e20776173206e6f742076657269666965642100000000000081525060200191505060405180910390fd5b61249a6143e6565b60405180606001604052808381526020013373ffffffffffffffffffffffffffffffffffffffff16815260200160008152509050601381908060018154018082558091505090600182039060005260206000209060030201600090919290919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015550505060016015600084815260200190815260200160002060006101000a81548160ff02191690831515021790555080601460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201559050507f209e782baeeecf4956303cb3e836fdf3f7279e6729ebccf2d309c292aedd3aeb33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1505050505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b60008061270d83611b12565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061277c57508373ffffffffffffffffffffffffffffffffffffffff166127648461111f565b73ffffffffffffffffffffffffffffffffffffffff16145b8061278d575061278c8185611f9f565b5b91505092915050565b6127a1838383612ca1565b6127ab8382612f46565b6127b582826130e4565b505050565b6127c482826131ab565b6127ce82826130e4565b6127d7816133c4565b5050565b6127e48161268f565b612856576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f34303420546f6b656e204e6f7420466f756e640000000000000000000000000081525060200191505060405180910390fd5b606061286182613410565b9050606061290960118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156128fe5780601f106128d3576101008083540402835291602001916128fe565b820191906000526020600020905b8154815290600101906020018083116128e157829003601f168201915b50505050508361353d565b905080601260008581526020019081526020016000209080519060200190612932929190614420565b50505050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000190506129666144a0565b61296e613581565b905080608001515160018651011461298557600080fd5b61298d6144e7565b6040518060400160405280600081526020016000815250905060008090505b8651811015612a2357838782815181106129c257fe5b6020026020010151106129d457600080fd5b612a1482612a0f856080015160018501815181106129ee57fe5b60200260200101518a8581518110612a0257fe5b60200260200101516139cf565b613a61565b915080806001019150506129ac565b50612a46818360800151600081518110612a3957fe5b6020026020010151613a61565b9050612a8c85600001518660200151612a5e84613b12565b8560400151612a708a60400151613b12565b8760600151612a828960000151613b12565b8960200151613bac565b612a9c5760019350505050612aa4565b600093505050505b92915050565b600081600001549050919050565b6000612ad98473ffffffffffffffffffffffffffffffffffffffff16613d10565b612ae65760019050612c99565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015612bc1578082015181840152602081019050612ba6565b50505050905090810190601f168015612bee5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015612c1057600080fd5b505af1158015612c24573d6000803e3d6000fd5b505050506040513d6020811015612c3a57600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b612caa81611b12565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614612d2d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806146856032913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612dd0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f5468652060746f60206164647265737320697320696e76616c6964210000000081525060200191505060405180910390fd5b6003600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055612e4d600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613d5b565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612ee6600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613d7e565b808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000612f9e6001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050613d9490919063ffffffff16565b905060006007600084815260200190815260200160002054905081811461308b576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061300b57fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061306357fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054809190600190036130dd9190614501565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b60006131b68261268f565b15613229576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f546f6b656e20616c72656164792065786973747321000000000000000000000081525060200191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156132cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f496e76616c69642061646472657373210000000000000000000000000000000081525060200191505060405180910390fd5b826002600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550613364600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613d7e565b818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b60606000821415613458576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050613538565b600082905060005b60008214613482578080600101915050600a828161347a57fe5b049150613460565b6060816040519080825280601f01601f1916602001820160405280156134b75781602001600182028038833980820191505090505b50905060006001830390505b6000861461353057600a86816134d557fe5b0660300160f81b828280600190039350815181106134ef57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a868161352857fe5b0495506134c3565b819450505050505b919050565b60606135798383604051806020016040528060008152506040518060200160405280600081525060405180602001604052806000815250613dde565b905092915050565b6135896144a0565b60405180604001604052807f2265513de57adfef750f242e611ea8444a8bd26c41cbfa52dadbf1d4c7c909c981526020017f2404d9074625244f508f4a75285a230a238adfd6634ecb9613243f620afe9e738152508160000181905250604051806040016040528060405180604001604052807f12d0ed5dc21d8d8b56fe0ac85559a85680cdc0df3215bae95a8699d24ccbe47181526020017f096935351b05a0aa00c79f756b5bcd9ed2f7b6be5c781f62f3dbe11fd57a4d06815250815260200160405180604001604052807f27c102d1435a4e2596a01e7b9dab01c2d674569187e3f4ce59aafcf37a26fa2481526020017f1943e9325f600724a34b4d265b96b0242f0ea3c3bc45bb00a11168db0b315dd98152508152508160200181905250604051806040016040528060405180604001604052807f30356665d1d5ee88eb0090b2f9ad42bf7a39cfe78d8b902b341280b472e9d10581526020017f20d2451d758275d0532e9e7ad74098f2962a889da62f57c206f054e5b4b251a3815250815260200160405180604001604052807f15cb89acd2a732e3f8324cdb9822e71480ca439c42dd99eb69ae7aabfd2c612881526020017f0a33effdc8d5a231d7c173e7c0af1397ea708692eb9d3d2423cdbd98d5e175d48152508152508160400181905250604051806040016040528060405180604001604052807f0d59d2aa07690641584be924e7010d8bfa2d3ec3b4121067d7a918edc27743b381526020017f169c281306535545d2cd70ae97cb4353233a47e7125ae3359f4a83ca62e6b4dc815250815260200160405180604001604052807f1f50e3576f5d31bad04c1074d1a67eb8d367b698d9afc48c11f5ef2b38ddcbdc81526020017f29db85a88f1554cd6eca15dd8d8b73e42369e74c90692c5c824246a1a12491398152508152508160600181905250600360405190808252806020026020018201604052801561387057816020015b61385d61452d565b8152602001906001900390816138555790505b50816080018190525060405180604001604052807f086593877a17b9bb273c37a07da6b515d26052fe732d4148015dde0d438677d881526020017f0e1aba3529817aac08b62458dab571fae367373f2c817d502eed1dd22701936a81525081608001516000815181106138df57fe5b602002602001018190525060405180604001604052807f1223c7eda0a8b13d325509bd24b34efd853fe2ef3b3c3d7520ba21c0387476eb81526020017f11692dc87da65404066ac5458bf6366c71d62c4cb0f38cfefdb064412165ecf8815250816080015160018151811061395057fe5b602002602001018190525060405180604001604052807f0eef39731bb46235f1823315237d47d96c0c8d88cfe02b1f61c7c7495d4961f281526020017f1d8180c036c9cd4094fdb419cb186368c71fe8b4c029f2796d4d76c598d12a5a81525081608001516002815181106139c157fe5b602002602001018190525090565b6139d76144e7565b6139df614547565b8360000151816000600381106139f157fe5b602002018181525050836020015181600160038110613a0c57fe5b6020020181815250508281600260038110613a2357fe5b602002018181525050600060608360808460076107d05a03fa90508060008114613a4c57613a4e565bfe5b5080613a5957600080fd5b505092915050565b613a696144e7565b613a71614569565b836000015181600060048110613a8357fe5b602002018181525050836020015181600160048110613a9e57fe5b602002018181525050826000015181600260048110613ab957fe5b602002018181525050826020015181600360048110613ad457fe5b602002018181525050600060608360c08460066107d05a03fa90508060008114613afd57613aff565bfe5b5080613b0a57600080fd5b505092915050565b613b1a6144e7565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47905060008360000151148015613b57575060008360200151145b15613b7b576040518060400160405280600081526020016000815250915050613ba7565b60405180604001604052808460000151815260200182856020015181613b9d57fe5b0683038152509150505b919050565b600060606004604051908082528060200260200182016040528015613beb57816020015b613bd861452d565b815260200190600190039081613bd05790505b50905060606004604051908082528060200260200182016040528015613c2b57816020015b613c1861458b565b815260200190600190039081613c105790505b5090508a82600081518110613c3c57fe5b60200260200101819052508882600181518110613c5557fe5b60200260200101819052508682600281518110613c6e57fe5b60200260200101819052508482600381518110613c8757fe5b60200260200101819052508981600081518110613ca057fe5b60200260200101819052508781600181518110613cb957fe5b60200260200101819052508581600281518110613cd257fe5b60200260200101819052508381600381518110613ceb57fe5b6020026020010181905250613d0082826140a0565b9250505098975050505050505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f9150808214158015613d5257506000801b8214155b92505050919050565b613d7360018260000154613d9490919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b6000613dd683836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506142f3565b905092915050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f191660200182016040528015613e3a5781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b8851811015613ebf57888181518110613e6657fe5b602001015160f81c60f81b838380600101945081518110613e8357fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613e51565b600090505b8751811015613f3257878181518110613ed957fe5b602001015160f81c60f81b838380600101945081518110613ef657fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613ec4565b600090505b8651811015613fa557868181518110613f4c57fe5b602001015160f81c60f81b838380600101945081518110613f6957fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613f37565b600090505b855181101561401857858181518110613fbf57fe5b602001015160f81c60f81b838380600101945081518110613fdc57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613faa565b600090505b845181101561408b5784818151811061403257fe5b602001015160f81c60f81b83838060010194508151811061404f57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061401d565b82995050505050505050505095945050505050565b600081518351146140b057600080fd5b60008351905060006006820290506060816040519080825280602002602001820160405280156140ef5781602001602082028038833980820191505090505b50905060008090505b838110156142955786818151811061410c57fe5b60200260200101516000015182600060068402018151811061412a57fe5b60200260200101818152505086818151811061414257fe5b60200260200101516020015182600160068402018151811061416057fe5b60200260200101818152505085818151811061417857fe5b60200260200101516000015160016002811061419057fe5b60200201518260026006840201815181106141a757fe5b6020026020010181815250508581815181106141bf57fe5b6020026020010151600001516000600281106141d757fe5b60200201518260036006840201815181106141ee57fe5b60200260200101818152505085818151811061420657fe5b60200260200101516020015160016002811061421e57fe5b602002015182600460068402018151811061423557fe5b60200260200101818152505085818151811061424d57fe5b60200260200101516020015160006002811061426557fe5b602002015182600560068402018151811061427c57fe5b60200260200101818152505080806001019150506140f8565b5061429e6145b1565b6000602082602086026020860160086107d05a03fa905080600081146142c3576142c5565bfe5b50806142d057600080fd5b6000826000600181106142df57fe5b602002015114159550505050505092915050565b60008383111582906143a0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561436557808201518184015260208101905061434a565b50505050905090810190601f1680156143925780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b60405180606001604052806143c661452d565b81526020016143d361458b565b81526020016143e061452d565b81525090565b604051806060016040528060008019168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061446157805160ff191683800117855561448f565b8280016001018555821561448f579182015b8281111561448e578251825591602001919060010190614473565b5b50905061449c91906145d3565b5090565b6040518060a001604052806144b361452d565b81526020016144c061458b565b81526020016144cd61458b565b81526020016144da61458b565b8152602001606081525090565b604051806040016040528060008152602001600081525090565b8154818355818111156145285781836000526020600020918201910161452791906145d3565b5b505050565b604051806040016040528060008152602001600081525090565b6040518060600160405280600390602082028038833980820191505090505090565b6040518060800160405280600490602082028038833980820191505090505090565b604051806040016040528061459e6145f8565b81526020016145ab6145f8565b81525090565b6040518060200160405280600190602082028038833980820191505090505090565b6145f591905b808211156145f15760008160009055506001016145d9565b5090565b90565b604051806040016040528060029060208202803883398082019150509050509056fe53656e646572206973206e6f7420617574686f72697a656420746f20617070726f76654f776e65722063616e6e6f74207472616e7366657220746f6b656e20746f2068696d73656c6653656e646572206d7573742062652074686520636f6e7472616374206f776e6572546865206066726f6d60206164647265737320646f6573206e6f74206d617463682074686520746f6b656e206f776e657221a265627a7a723158207cfb912e774d07e1ac763fcb22e0d4126b1bdcfe7b2d6436a24a515e2935e39d64736f6c6343000510003268747470733a2f2f73332d75732d776573742d322e616d617a6f6e6177732e636f6d2f756461636974792d626c6f636b636861696e2f63617073746f6e652f",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101a95760003560e01c80634f6ccce7116100f9578063a22cb46511610097578063d547cfb711610071578063d547cfb714610d71578063e985e9c514610df4578063f2fde38b14610e70578063f76b443114610eb4576101a9565b8063a22cb46514610b75578063b88d4fde14610bc5578063c87b56dd14610cca576101a9565b806370a08231116100d357806370a08231146109f457806377387c5114610a4c578063893d20e814610aa857806395d89b4114610af2576101a9565b80634f6ccce7146107cb578063621e9ec01461080d5780636352211e14610986576101a9565b806323b872dd1161016657806338bbfa501161014057806338bbfa50146105355780633c168eab1461069157806340c10f19146106f757806342842e0e1461075d576101a9565b806323b872dd146103a057806327dc297e1461040e5780632f745c59146104d3576101a9565b806301ffc9a7146101ae57806306fdde0314610213578063081812fc14610296578063095ea7b31461030457806316c38b3c1461035257806318160ddd14610382575b600080fd5b6101f9600480360360208110156101c457600080fd5b8101908080357bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19169060200190929190505050611015565b604051808215151515815260200191505060405180910390f35b61021b61107d565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561025b578082015181840152602081019050610240565b50505050905090810190601f1680156102885780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6102c2600480360360208110156102ac57600080fd5b810190808035906020019092919050505061111f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103506004803603604081101561031a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506111d7565b005b6103806004803603602081101561036857600080fd5b810190808035151590602001909291905050506113b0565b005b61038a611544565b6040518082815260200191505060405180910390f35b61040c600480360360608110156103b657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611551565b005b6104d16004803603604081101561042457600080fd5b81019080803590602001909291908035906020019064010000000081111561044b57600080fd5b82018360208201111561045d57600080fd5b8035906020019184600183028401116401000000008311171561047f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611574565b005b61051f600480360360408110156104e957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506115b7565b6040518082815260200191505060405180910390f35b61068f6004803603606081101561054b57600080fd5b81019080803590602001909291908035906020019064010000000081111561057257600080fd5b82018360208201111561058457600080fd5b803590602001918460018302840111640100000000831117156105a657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561060957600080fd5b82018360208201111561061b57600080fd5b8035906020019184600183028401116401000000008311171561063d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061162a565b005b6106dd600480360360408110156106a757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061162f565b604051808215151515815260200191505060405180910390f35b6107436004803603604081101561070d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506117fe565b604051808215151515815260200191505060405180910390f35b6107c96004803603606081101561077357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506118c2565b005b6107f7600480360360208110156107e157600080fd5b81019080803590602001909291905050506118e2565b6040518082815260200191505060405180910390f35b61096c600480360361014081101561082457600080fd5b8101908080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908060800190600280602002604051908101604052809291906000905b828210156108d9578382604002016002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505081526020019060010190610885565b50505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f8201169050808301925050505050509192919290505050611916565b604051808215151515815260200191505060405180910390f35b6109b26004803603602081101561099c57600080fd5b8101908080359060200190929190505050611b12565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610a3660048036036020811015610a0a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b4f565b6040518082815260200191505060405180910390f35b610a8e60048036036020811015610a6257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b9f565b604051808215151515815260200191505060405180910390f35b610ab0611c0b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610afa611c34565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610b3a578082015181840152602081019050610b1f565b50505050905090810190601f168015610b675780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610bc360048036036040811015610b8b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803515159060200190929190505050611cd6565b005b610cc860048036036080811015610bdb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610c4257600080fd5b820183602082011115610c5457600080fd5b80359060200191846001830284011164010000000083111715610c7657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611e10565b005b610cf660048036036020811015610ce057600080fd5b8101908080359060200190929190505050611e36565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610d36578082015181840152602081019050610d1b565b50505050905090810190601f168015610d635780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610d79611efd565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610db9578082015181840152602081019050610d9e565b50505050905090810190601f168015610de65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b610e5660048036036040811015610e0a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611f9f565b604051808215151515815260200191505060405180910390f35b610eb260048036036020811015610e8657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612033565b005b6110136004803603610140811015610ecb57600080fd5b8101908080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505091929192908060800190600280602002604051908101604052809291906000905b82821015610f80578382604002016002806020026040519081016040528092919082600260200280828437600081840152601f19601f82011690508083019250505050505081526020019060010190610f2c565b50505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929080604001906002806020026040519081016040528092919082600260200280828437600081840152601f19601f820116905080830192505050505050919291929050505061227a565b005b600060016000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6060600f8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111155780601f106110ea57610100808354040283529160200191611115565b820191906000526020600020905b8154815290600101906020018083116110f857829003601f168201915b5050505050905090565b600061112a8261268f565b61119c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f34303420546f6b656e206e6f7420666f756e642100000000000000000000000081525060200191505060405180910390fd5b6003600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006111e282611b12565b90508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611269576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061463e6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806112a957506112a88133611f9f565b5b6112fe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602381526020018061461b6023913960400191505060405180910390fd5b826003600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611455576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806146646021913960400191505060405180910390fd5b80600060146101000a81548160ff02191690831515021790555080156114dd577f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1611541565b7fff2b959f2bcdb44c7ecb4b16dae055431019d7350607125cfc2b74a06632c90e33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a15b50565b6000600880549050905090565b61155b3382612701565b61156457600080fd5b61156f838383612796565b505050565b6115b3828260006040519080825280601f01601f1916602001820160405280156115ad5781602001600182028038833980820191505090505b5061162a565b5050565b60006115c283611b4f565b82106115cd57600080fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061161757fe5b9060005260206000200154905092915050565b505050565b60008060001b601460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154116116eb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f34303420536f6c7574696f6e204e6f7420466f756e642100000000000000000081525060200191505060405180910390fd5b6000601460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020154146117a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536f6c7574696f6e20616c72656164792068617320746f6b656e00000000000081525060200191505060405180910390fd5b6117ad83836127ba565b81601460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201819055506001905092915050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146118a5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806146646021913960400191505060405180910390fd5b6118af83836127ba565b6118b8826127db565b6001905092915050565b6118dd83838360405180602001604052806000815250611e10565b505050565b60006118ec611544565b82106118f757600080fd5b6008828154811061190457fe5b90600052602060002001549050919050565b60006119206143b3565b60405180604001604052808760006002811061193857fe5b602002015181526020018760016002811061194f57fe5b60200201518152508160000181905250604051806040016040528060405180604001604052808860006002811061198257fe5b602002015160006002811061199357fe5b60200201518152602001886000600281106119aa57fe5b60200201516001600281106119bb57fe5b602002015181525081526020016040518060400160405280886001600281106119e057fe5b60200201516000600281106119f157fe5b6020020151815260200188600160028110611a0857fe5b6020020151600160028110611a1957fe5b60200201518152508152508160200181905250604051806040016040528085600060028110611a4457fe5b6020020151815260200185600160028110611a5b57fe5b6020020151815250816040018190525060606002604051908082528060200260200182016040528015611a9d5781602001602082028038833980820191505090505b50905060008090505b6002811015611ae557848160028110611abb57fe5b6020020151828281518110611acc57fe5b6020026020010181815250508080600101915050611aa6565b506000611af28284612938565b1415611b0357600192505050611b0a565b6000925050505b949350505050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000611b98600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020612aaa565b9050919050565b600060156000601460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154815260200190815260200160002060009054906101000a900460ff169050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b606060108054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611ccc5780601f10611ca157610100808354040283529160200191611ccc565b820191906000526020600020905b815481529060010190602001808311611caf57829003601f168201915b5050505050905090565b3373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611d0f57600080fd5b80600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051808215151515815260200191505060405180910390a35050565b611e1b848484611551565b611e2784848484612ab8565b611e3057600080fd5b50505050565b6060611e418261268f565b611e4a57600080fd5b601260008381526020019081526020016000208054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611ef15780601f10611ec657610100808354040283529160200191611ef1565b820191906000526020600020905b815481529060010190602001808311611ed457829003601f168201915b50505050509050919050565b606060118054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611f955780601f10611f6a57610100808354040283529160200191611f95565b820191906000526020600020905b815481529060010190602001808311611f7857829003601f168201915b5050505050905090565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146120d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806146646021913960400191505060405180910390fd5b3273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612179576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f53656e646572206d7573742062652061207265616c20636f6e7472616374000081525060200191505060405180910390fd5b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f0d18b5fd22306e373229b9439188228edca81207d1667f604daf6cef8aa3ee678183604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a15050565b6000848484846040516020018085600260200280838360005b838110156122ae578082015181840152602081019050612293565b505050509050018460026000925b818410156123025782846020020151600260200280838360005b838110156122f15780820151818401526020810190506122d6565b5050505090500192600101926122bc565b9250505083600260200280838360005b8381101561232d578082015181840152602081019050612312565b5050505090500182600260200280838360005b8381101561235b578082015181840152602081019050612340565b505050509050019450505050506040516020818303038152906040528051906020012090506015600082815260200190815260200160002060009054906101000a900460ff1615612414576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f536f6c7574696f6e20616c72656164792065786973747321000000000000000081525060200191505060405180910390fd5b61242085858585611916565b612492576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601a8152602001807f536f6c7574696f6e20776173206e6f742076657269666965642100000000000081525060200191505060405180910390fd5b61249a6143e6565b60405180606001604052808381526020013373ffffffffffffffffffffffffffffffffffffffff16815260200160008152509050601381908060018154018082558091505090600182039060005260206000209060030201600090919290919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015550505060016015600084815260200190815260200160002060006101000a81548160ff02191690831515021790555080601460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550604082015181600201559050507f209e782baeeecf4956303cb3e836fdf3f7279e6729ebccf2d309c292aedd3aeb33604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a1505050505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b60008061270d83611b12565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061277c57508373ffffffffffffffffffffffffffffffffffffffff166127648461111f565b73ffffffffffffffffffffffffffffffffffffffff16145b8061278d575061278c8185611f9f565b5b91505092915050565b6127a1838383612ca1565b6127ab8382612f46565b6127b582826130e4565b505050565b6127c482826131ab565b6127ce82826130e4565b6127d7816133c4565b5050565b6127e48161268f565b612856576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f34303420546f6b656e204e6f7420466f756e640000000000000000000000000081525060200191505060405180910390fd5b606061286182613410565b9050606061290960118054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156128fe5780601f106128d3576101008083540402835291602001916128fe565b820191906000526020600020905b8154815290600101906020018083116128e157829003601f168201915b50505050508361353d565b905080601260008581526020019081526020016000209080519060200190612932929190614420565b50505050565b6000807f30644e72e131a029b85045b68181585d2833e84879b9709143e1f593f000000190506129666144a0565b61296e613581565b905080608001515160018651011461298557600080fd5b61298d6144e7565b6040518060400160405280600081526020016000815250905060008090505b8651811015612a2357838782815181106129c257fe5b6020026020010151106129d457600080fd5b612a1482612a0f856080015160018501815181106129ee57fe5b60200260200101518a8581518110612a0257fe5b60200260200101516139cf565b613a61565b915080806001019150506129ac565b50612a46818360800151600081518110612a3957fe5b6020026020010151613a61565b9050612a8c85600001518660200151612a5e84613b12565b8560400151612a708a60400151613b12565b8760600151612a828960000151613b12565b8960200151613bac565b612a9c5760019350505050612aa4565b600093505050505b92915050565b600081600001549050919050565b6000612ad98473ffffffffffffffffffffffffffffffffffffffff16613d10565b612ae65760019050612c99565b60008473ffffffffffffffffffffffffffffffffffffffff1663150b7a02338887876040518563ffffffff1660e01b8152600401808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200183815260200180602001828103825283818151815260200191508051906020019080838360005b83811015612bc1578082015181840152602081019050612ba6565b50505050905090810190601f168015612bee5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b158015612c1057600080fd5b505af1158015612c24573d6000803e3d6000fd5b505050506040513d6020811015612c3a57600080fd5b8101908080519060200190929190505050905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149150505b949350505050565b612caa81611b12565b73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614612d2d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260328152602001806146856032913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612dd0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f5468652060746f60206164647265737320697320696e76616c6964210000000081525060200191505060405180910390fd5b6003600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055612e4d600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613d5b565b816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550612ee6600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613d7e565b808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000612f9e6001600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050613d9490919063ffffffff16565b905060006007600084815260200190815260200160002054905081811461308b576000600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061300b57fe5b9060005260206000200154905080600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061306357fe5b9060005260206000200181905550816007600083815260200190815260200160002081905550505b600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054809190600190036130dd9190614501565b5050505050565b600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506007600083815260200190815260200160002081905550600660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055505050565b60006131b68261268f565b15613229576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f546f6b656e20616c72656164792065786973747321000000000000000000000081525060200191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156132cb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f496e76616c69642061646472657373210000000000000000000000000000000081525060200191505060405180910390fd5b826002600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550613364600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613d7e565b818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6008805490506009600083815260200190815260200160002081905550600881908060018154018082558091505090600182039060005260206000200160009091929091909150555050565b60606000821415613458576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050613538565b600082905060005b60008214613482578080600101915050600a828161347a57fe5b049150613460565b6060816040519080825280601f01601f1916602001820160405280156134b75781602001600182028038833980820191505090505b50905060006001830390505b6000861461353057600a86816134d557fe5b0660300160f81b828280600190039350815181106134ef57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a868161352857fe5b0495506134c3565b819450505050505b919050565b60606135798383604051806020016040528060008152506040518060200160405280600081525060405180602001604052806000815250613dde565b905092915050565b6135896144a0565b60405180604001604052807f2265513de57adfef750f242e611ea8444a8bd26c41cbfa52dadbf1d4c7c909c981526020017f2404d9074625244f508f4a75285a230a238adfd6634ecb9613243f620afe9e738152508160000181905250604051806040016040528060405180604001604052807f12d0ed5dc21d8d8b56fe0ac85559a85680cdc0df3215bae95a8699d24ccbe47181526020017f096935351b05a0aa00c79f756b5bcd9ed2f7b6be5c781f62f3dbe11fd57a4d06815250815260200160405180604001604052807f27c102d1435a4e2596a01e7b9dab01c2d674569187e3f4ce59aafcf37a26fa2481526020017f1943e9325f600724a34b4d265b96b0242f0ea3c3bc45bb00a11168db0b315dd98152508152508160200181905250604051806040016040528060405180604001604052807f30356665d1d5ee88eb0090b2f9ad42bf7a39cfe78d8b902b341280b472e9d10581526020017f20d2451d758275d0532e9e7ad74098f2962a889da62f57c206f054e5b4b251a3815250815260200160405180604001604052807f15cb89acd2a732e3f8324cdb9822e71480ca439c42dd99eb69ae7aabfd2c612881526020017f0a33effdc8d5a231d7c173e7c0af1397ea708692eb9d3d2423cdbd98d5e175d48152508152508160400181905250604051806040016040528060405180604001604052807f0d59d2aa07690641584be924e7010d8bfa2d3ec3b4121067d7a918edc27743b381526020017f169c281306535545d2cd70ae97cb4353233a47e7125ae3359f4a83ca62e6b4dc815250815260200160405180604001604052807f1f50e3576f5d31bad04c1074d1a67eb8d367b698d9afc48c11f5ef2b38ddcbdc81526020017f29db85a88f1554cd6eca15dd8d8b73e42369e74c90692c5c824246a1a12491398152508152508160600181905250600360405190808252806020026020018201604052801561387057816020015b61385d61452d565b8152602001906001900390816138555790505b50816080018190525060405180604001604052807f086593877a17b9bb273c37a07da6b515d26052fe732d4148015dde0d438677d881526020017f0e1aba3529817aac08b62458dab571fae367373f2c817d502eed1dd22701936a81525081608001516000815181106138df57fe5b602002602001018190525060405180604001604052807f1223c7eda0a8b13d325509bd24b34efd853fe2ef3b3c3d7520ba21c0387476eb81526020017f11692dc87da65404066ac5458bf6366c71d62c4cb0f38cfefdb064412165ecf8815250816080015160018151811061395057fe5b602002602001018190525060405180604001604052807f0eef39731bb46235f1823315237d47d96c0c8d88cfe02b1f61c7c7495d4961f281526020017f1d8180c036c9cd4094fdb419cb186368c71fe8b4c029f2796d4d76c598d12a5a81525081608001516002815181106139c157fe5b602002602001018190525090565b6139d76144e7565b6139df614547565b8360000151816000600381106139f157fe5b602002018181525050836020015181600160038110613a0c57fe5b6020020181815250508281600260038110613a2357fe5b602002018181525050600060608360808460076107d05a03fa90508060008114613a4c57613a4e565bfe5b5080613a5957600080fd5b505092915050565b613a696144e7565b613a71614569565b836000015181600060048110613a8357fe5b602002018181525050836020015181600160048110613a9e57fe5b602002018181525050826000015181600260048110613ab957fe5b602002018181525050826020015181600360048110613ad457fe5b602002018181525050600060608360c08460066107d05a03fa90508060008114613afd57613aff565bfe5b5080613b0a57600080fd5b505092915050565b613b1a6144e7565b60007f30644e72e131a029b85045b68181585d97816a916871ca8d3c208c16d87cfd47905060008360000151148015613b57575060008360200151145b15613b7b576040518060400160405280600081526020016000815250915050613ba7565b60405180604001604052808460000151815260200182856020015181613b9d57fe5b0683038152509150505b919050565b600060606004604051908082528060200260200182016040528015613beb57816020015b613bd861452d565b815260200190600190039081613bd05790505b50905060606004604051908082528060200260200182016040528015613c2b57816020015b613c1861458b565b815260200190600190039081613c105790505b5090508a82600081518110613c3c57fe5b60200260200101819052508882600181518110613c5557fe5b60200260200101819052508682600281518110613c6e57fe5b60200260200101819052508482600381518110613c8757fe5b60200260200101819052508981600081518110613ca057fe5b60200260200101819052508781600181518110613cb957fe5b60200260200101819052508581600281518110613cd257fe5b60200260200101819052508381600381518110613ceb57fe5b6020026020010181905250613d0082826140a0565b9250505098975050505050505050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f9150808214158015613d5257506000801b8214155b92505050919050565b613d7360018260000154613d9490919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b6000613dd683836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506142f3565b905092915050565b6060808690506060869050606086905060608690506060869050606081518351855187518951010101016040519080825280601f01601f191660200182016040528015613e3a5781602001600182028038833980820191505090505b509050606081905060008090506000809050600090505b8851811015613ebf57888181518110613e6657fe5b602001015160f81c60f81b838380600101945081518110613e8357fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613e51565b600090505b8751811015613f3257878181518110613ed957fe5b602001015160f81c60f81b838380600101945081518110613ef657fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613ec4565b600090505b8651811015613fa557868181518110613f4c57fe5b602001015160f81c60f81b838380600101945081518110613f6957fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613f37565b600090505b855181101561401857858181518110613fbf57fe5b602001015160f81c60f81b838380600101945081518110613fdc57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053508080600101915050613faa565b600090505b845181101561408b5784818151811061403257fe5b602001015160f81c60f81b83838060010194508151811061404f57fe5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350808060010191505061401d565b82995050505050505050505095945050505050565b600081518351146140b057600080fd5b60008351905060006006820290506060816040519080825280602002602001820160405280156140ef5781602001602082028038833980820191505090505b50905060008090505b838110156142955786818151811061410c57fe5b60200260200101516000015182600060068402018151811061412a57fe5b60200260200101818152505086818151811061414257fe5b60200260200101516020015182600160068402018151811061416057fe5b60200260200101818152505085818151811061417857fe5b60200260200101516000015160016002811061419057fe5b60200201518260026006840201815181106141a757fe5b6020026020010181815250508581815181106141bf57fe5b6020026020010151600001516000600281106141d757fe5b60200201518260036006840201815181106141ee57fe5b60200260200101818152505085818151811061420657fe5b60200260200101516020015160016002811061421e57fe5b602002015182600460068402018151811061423557fe5b60200260200101818152505085818151811061424d57fe5b60200260200101516020015160006002811061426557fe5b602002015182600560068402018151811061427c57fe5b60200260200101818152505080806001019150506140f8565b5061429e6145b1565b6000602082602086026020860160086107d05a03fa905080600081146142c3576142c5565bfe5b50806142d057600080fd5b6000826000600181106142df57fe5b602002015114159550505050505092915050565b60008383111582906143a0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561436557808201518184015260208101905061434a565b50505050905090810190601f1680156143925780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b60405180606001604052806143c661452d565b81526020016143d361458b565b81526020016143e061452d565b81525090565b604051806060016040528060008019168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061446157805160ff191683800117855561448f565b8280016001018555821561448f579182015b8281111561448e578251825591602001919060010190614473565b5b50905061449c91906145d3565b5090565b6040518060a001604052806144b361452d565b81526020016144c061458b565b81526020016144cd61458b565b81526020016144da61458b565b8152602001606081525090565b604051806040016040528060008152602001600081525090565b8154818355818111156145285781836000526020600020918201910161452791906145d3565b5b505050565b604051806040016040528060008152602001600081525090565b6040518060600160405280600390602082028038833980820191505090505090565b6040518060800160405280600490602082028038833980820191505090505090565b604051806040016040528061459e6145f8565b81526020016145ab6145f8565b81525090565b6040518060200160405280600190602082028038833980820191505090505090565b6145f591905b808211156145f15760008160009055506001016145d9565b5090565b90565b604051806040016040528060029060208202803883398082019150509050509056fe53656e646572206973206e6f7420617574686f72697a656420746f20617070726f76654f776e65722063616e6e6f74207472616e7366657220746f6b656e20746f2068696d73656c6653656e646572206d7573742062652074686520636f6e7472616374206f776e6572546865206066726f6d60206164647265737320646f6573206e6f74206d617463682074686520746f6b656e206f776e657221a265627a7a723158207cfb912e774d07e1ac763fcb22e0d4126b1bdcfe7b2d6436a24a515e2935e39d64736f6c63430005100032",
  "sourceMap": "357:2222:3:-;;;422:115;8:9:-1;5:2;;;30:1;27;20:12;5:2;422:115:3;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;422:115:3;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;422:115:3;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;422:115:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19:11:-1;14:3;11:20;8:2;;;44:1;41;34:12;8:2;71:11;66:3;62:21;55:28;;123:4;118:3;114:14;159:9;141:16;138:31;135:2;;;182:1;179;172:12;135:2;219:3;213:10;330:9;325:1;311:12;307:20;289:16;285:43;282:58;261:11;247:12;244:29;233:115;230:2;;;361:1;358;351:12;230:2;384:12;379:3;372:25;420:4;415:3;411:14;404:21;;0:432;;422:115:3;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;422:115:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;517:4;523:6;23279:4:0;23297:6;20912:313;;;;;;;;;;;;;;;;;668:10;659:6;;:19;;;;;;;;;;;;;;;;;;693:39;721:1;725:6;;;;;;;;;;;693:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2208:5;2198:7;;:15;;;;;;;;;;;;;;;;;;3161:40;2759:10;3180:20;;3161:18;;;:40;;:::i;:::-;5414;5289:10;5433:20;;5414:18;;;:40;;:::i;:::-;13524:51;13130:10;13543:31;;13524:18;;;:51;;:::i;:::-;21090:4;21082:5;:12;;;;;;;;;;;;:::i;:::-;;21114:6;21104:7;:16;;;;;;;;;;;;:::i;:::-;;21146:12;21130:13;:28;;;;;;;;;;;;:::i;:::-;;21169:49;20723:10;21188:29;;21169:18;;;:49;;:::i;:::-;20912:313;;;23174:225;;422:115:3;;357:2222;;3539:158:0;3629:10;3614:25;;:11;:25;;;;;3606:34;;;;;;3686:4;3650:20;:33;3671:11;3650:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;3539:158;:::o;357:2222:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "357:2222:3:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;357:2222:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3299:161:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3299:161:0;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;21312:83;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;21312:83:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6755:267;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6755:267:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6015:734;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6015:734:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1864:213;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1864:213:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;14317:94;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8027:210;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8027:210:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;15888:122:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15888:122:2;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;15888:122:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;15888:122:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;15888:122:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;15888:122:2;;;;;;;;;;;;;;;:::i;:::-;;13955:210:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13955:210:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;16016:221:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16016:221:2;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;16016:221:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;16016:221:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;16016:221:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;16016:221:2;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;16016:221:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;16016:221:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;16016:221:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;16016:221:2;;;;;;;;;;;;;;;:::i;:::-;;2250:327:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2250:327:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;23405:198:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;23405:198:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;8243:162;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8243:162:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;14748:148;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14748:148:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;26642:665:4;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;26642:665:4;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;26642:665:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;26642:665:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;26642:665:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;26642:665:4;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5769:169:0;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5769:169:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5467:296;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5467:296:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1166:137:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1166:137:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;435:87:0;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;21401;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;21401:87:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7314:213;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7314:213:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8411:249;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;8411:249:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;8411:249:0;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;8411:249:0;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;8411:249:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;8411:249:0;;;;;;;;;;;;;;;:::i;:::-;;21599:151;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;21599:151:0;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;21599:151:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21494:99;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;21494:99:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7848:173;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7848:173:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1018:399;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1018:399:0;;;;;;;;;;;;;;;;;;;:::i;:::-;;1392:631:3;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1392:631:3;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1392:631:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1392:631:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1392:631:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1392:631:3;;;;;;;;;;;;;;:::i;:::-;;3299:161:0;3393:4;3420:20;:33;3441:11;3420:33;;;;;;;;;;;;;;;;;;;;;;;;;;;3413:40;;3299:161;;;:::o;21312:83::-;21351:13;21383:5;21376:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21312:83;:::o;6755:267::-;6838:16;6929;6937:7;6929;:16::i;:::-;6921:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6991:15;:24;7007:7;6991:24;;;;;;;;;;;;;;;;;;;;;6980:35;;6755:267;;;:::o;6015:734::-;6155:21;6179:16;6187:7;6179;:16::i;:::-;6155:40;;6230:2;6213:19;;:13;:19;;;;6205:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6425:13;6411:27;;:10;:27;;;:90;;;;6458:43;6475:13;6490:10;6458:16;:43::i;:::-;6411:90;6390:172;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6652:2;6625:15;:24;6641:7;6625:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;6734:7;6730:2;6706:36;;6715:13;6706:36;;;;;;;;;;;;6015:734;;;:::o;1864:213::-;899:6;;;;;;;;;;;885:20;;:10;:20;;;877:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1935:8;1925:7;;:18;;;;;;;;;;;;;;;;;;1957:8;1953:118;;;1986:18;1993:10;1986:18;;;;;;;;;;;;;;;;;;;;;;1953:118;;;2040:20;2049:10;2040:20;;;;;;;;;;;;;;;;;;;;;;1953:118;1864:213;:::o;14317:94::-;14361:7;14387:10;:17;;;;14380:24;;14317:94;:::o;8027:210::-;8147:39;8166:10;8178:7;8147:18;:39::i;:::-;8139:48;;;;;;8198:32;8212:4;8218:2;8222:7;8198:13;:32::i;:::-;8027:210;;;:::o;15888:122:2:-;15963:40;15974:5;15981:7;16000:1;15990:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;15990:12:2;;;;15963:10;:40::i;:::-;15888:122;;:::o;13955:210:0:-;14059:7;14098:16;14108:5;14098:9;:16::i;:::-;14090:5;:24;14082:33;;;;;;14132:12;:19;14145:5;14132:19;;;;;;;;;;;;;;;14152:5;14132:26;;;;;;;;;;;;;;;;14125:33;;13955:210;;;;:::o;16016:221:2:-;;;;:::o;2250:327:3:-;2312:11;2369:1;2343:27;;:13;:17;2357:2;2343:17;;;;;;;;;;;;;;;:23;;;:27;2335:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2443:1;2416:13;:17;2430:2;2416:17;;;;;;;;;;;;;;;:23;;;:28;2408:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2486:18;2492:2;2496:7;2486:5;:18::i;:::-;2540:7;2514:13;:17;2528:2;2514:17;;;;;;;;;;;;;;;:23;;:33;;;;2566:4;2557:13;;2250:327;;;;:::o;23405:198:0:-;23498:11;899:6;;;;;;;;;;;885:20;;:10;:20;;;877:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23525:18;23531:2;23535:7;23525:5;:18::i;:::-;23553:20;23565:7;23553:11;:20::i;:::-;23592:4;23583:13;;23405:198;;;;:::o;8243:162::-;8359:39;8376:4;8382:2;8386:7;8359:39;;;;;;;;;;;;:16;:39::i;:::-;8243:162;;;:::o;14748:148::-;14806:7;14841:13;:11;:13::i;:::-;14833:5;:21;14825:30;;;;;;14872:10;14883:5;14872:17;;;;;;;;;;;;;;;;14865:24;;14748:148;;;:::o;26642:665:4:-;26810:6;26828:18;;:::i;:::-;26866:27;;;;;;;;26882:1;26884;26882:4;;;;;;;;;;;26866:27;;;;26888:1;26890;26888:4;;;;;;;;;;;26866:27;;;26856:5;:7;;:37;;;;26913:55;;;;;;;;;;;;;;;;26930:1;26932;26930:4;;;;;;;;;;;26935:1;26930:7;;;;;;;;;;;26913:55;;;;26939:1;26941;26939:4;;;;;;;;;;;26944:1;26939:7;;;;;;;;;;;26913:55;;;;;;;;;;;;;;;26950:1;26952;26950:4;;;;;;;;;;;26955:1;26950:7;;;;;;;;;;;26913:55;;;;26959:1;26961;26959:4;;;;;;;;;;;26964:1;26959:7;;;;;;;;;;;26913:55;;;;;;26903:5;:7;;:65;;;;26988:27;;;;;;;;27004:1;27006;27004:4;;;;;;;;;;;26988:27;;;;27010:1;27012;27010:4;;;;;;;;;;;26988:27;;;26978:5;:7;;:37;;;;27025:28;27070:1;27056:16;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;27056:16:4;;;;27025:47;;27088:9;27100:1;27088:13;;27083:93;27107:12;27103:1;:16;27083:93;;;27157:5;27163:1;27157:8;;;;;;;;;;;27140:11;27152:1;27140:14;;;;;;;;;;;;;:25;;;;;27121:3;;;;;;;27083:93;;;;27219:1;27189:26;27196:11;27209:5;27189:6;:26::i;:::-;:31;27185:116;;;27243:4;27236:11;;;;;;27185:116;27285:5;27278:12;;;;26642:665;;;;;;;:::o;5769:169:0:-;5824:13;5911:11;:20;5923:7;5911:20;;;;;;;;;;;;;;;;;;;;;5903:28;;5769:169;;;:::o;5467:296::-;5522:15;5722:34;:17;:24;5740:5;5722:24;;;;;;;;;;;;;;;:32;:34::i;:::-;5712:44;;5467:296;;;:::o;1166:137:3:-;1226:11;1258:10;:38;1269:13;:20;1283:5;1269:20;;;;;;;;;;;;;;;:26;;;1258:38;;;;;;;;;;;;;;;;;;;;;1249:47;;1166:137;;;:::o;435:87:0:-;476:13;509:6;;;;;;;;;;;501:14;;435:87;:::o;21401:::-;21442:13;21474:7;21467:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21401:87;:::o;7314:213::-;7399:10;7393:16;;:2;:16;;;;7385:25;;;;;;7457:8;7420:18;:30;7439:10;7420:30;;;;;;;;;;;;;;;:34;7451:2;7420:34;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;7507:2;7480:40;;7495:10;7480:40;;;7511:8;7480:40;;;;;;;;;;;;;;;;;;;;;;7314:213;;:::o;8411:249::-;8555:31;8568:4;8574:2;8578:7;8555:12;:31::i;:::-;8604:48;8627:4;8633:2;8637:7;8646:5;8604:22;:48::i;:::-;8596:57;;;;;;8411:249;;;;:::o;21599:151::-;21657:13;21690:16;21698:7;21690;:16::i;:::-;21682:25;;;;;;21724:10;:19;21735:7;21724:19;;;;;;;;;;;21717:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21599:151;;;:::o;21494:99::-;21541:13;21573;21566:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21494:99;:::o;7848:173::-;7952:4;7979:18;:25;7998:5;7979:25;;;;;;;;;;;;;;;:35;8005:8;7979:35;;;;;;;;;;;;;;;;;;;;;;;;;7972:42;;7848:173;;;;:::o;1018:399::-;899:6;;;;;;;;;;;885:20;;:10;:20;;;877:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1250:9;1236:23;;:10;:23;;;1228:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1304:16;1323:6;;;;;;;;;;;1304:25;;1348:8;1339:6;;:17;;;;;;;;;;;;;;;;;;1371:39;1391:8;1401;1371:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;953:1;1018:399;:::o;1392:631:3:-;1559:13;1602:1;1605;1608;1611:5;1585:32;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1585:32:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1585:32:3;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1585:32:3;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1585:32:3;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1585:32:3;;;1575:43;;;;;;1559:59;;1637:10;:17;1648:5;1637:17;;;;;;;;;;;;;;;;;;;;;1636:18;1628:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1701:24;1710:1;1713;1716;1719:5;1701:8;:24::i;:::-;1693:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1767:24;;:::i;:::-;1806:54;;;;;;;;1823:5;1806:54;;;;1838:10;1806:54;;;;;;1857:1;1806:54;;;1767:93;;1870:10;1886:8;1870:25;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1870:25:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1925:4;1905:10;:17;1916:5;1905:17;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;1967:8;1939:13;:25;1953:10;1939:25;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1991:25;2005:10;1991:25;;;;;;;;;;;;;;;;;;;;;;1392:631;;;;;;:::o;8854:152:0:-;8911:4;8927:13;8943:11;:20;8955:7;8943:20;;;;;;;;;;;;;;;;;;;;;8927:36;;8997:1;8980:19;;:5;:19;;;;8973:26;;;8854:152;;;:::o;9366:298::-;9475:4;9495:13;9511:16;9519:7;9511;:16::i;:::-;9495:32;;9556:5;9545:16;;:7;:16;;;:63;;;;9601:7;9577:31;;:20;9589:7;9577:11;:20::i;:::-;:31;;;9545:63;:111;;;;9624:32;9641:5;9648:7;9624:16;:32::i;:::-;9545:111;9537:120;;;9366:298;;;;:::o;15271:269::-;15386:38;15406:4;15412:2;15416:7;15386:19;:38::i;:::-;15435:47;15468:4;15474:7;15435:32;:47::i;:::-;15493:40;15521:2;15525:7;15493:27;:40::i;:::-;15271:269;;;:::o;15795:196::-;15858:24;15870:2;15874:7;15858:11;:24::i;:::-;15893:40;15921:2;15925:7;15893:27;:40::i;:::-;15944;15976:7;15944:31;:40::i;:::-;15795:196;;:::o;22222:285::-;22287:16;22295:7;22287;:16::i;:::-;22279:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22337:24;22364:17;22373:7;22364:8;:17::i;:::-;22337:44;;22391:26;22420:36;22430:13;22420:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22445:10;22420:9;:36::i;:::-;22391:65;;22488:12;22466:10;:19;22477:7;22466:19;;;;;;;;;;;:34;;;;;;;;;;;;:::i;:::-;;22222:285;;;:::o;25508:1128:4:-;25615:7;25638:26;25679:77;25638:118;;25766:22;;:::i;:::-;25791:14;:12;:14::i;:::-;25766:39;;25843:2;:12;;;:19;25838:1;25823:5;:12;:16;:39;25815:48;;;;;;25920:27;;:::i;:::-;25950:21;;;;;;;;25966:1;25950:21;;;;25969:1;25950:21;;;25920:51;;25986:9;25998:1;25986:13;;25981:246;26005:5;:12;26001:1;:16;25981:246;;;26057:18;26046:5;26052:1;26046:8;;;;;;;;;;;;;;:29;26038:38;;;;;;26097:119;26131:4;26153:49;26172:2;:12;;;26189:1;26185;:5;26172:19;;;;;;;;;;;;;;26193:5;26199:1;26193:8;;;;;;;;;;;;;;26153:18;:49::i;:::-;26097:16;:119::i;:::-;26090:126;;26019:3;;;;;;;25981:246;;;;26243:39;26260:4;26266:2;:12;;;26279:1;26266:15;;;;;;;;;;;;;;26243:16;:39::i;:::-;26236:46;;26310:282;26348:5;:7;;;26373:5;:7;;;26398:20;26413:4;26398:14;:20::i;:::-;26436:2;:8;;;26462:23;26477:5;:7;;;26462:14;:23::i;:::-;26503:2;:8;;;26529:24;26544:2;:8;;;26529:14;:24::i;:::-;26571:2;:7;;;26310:20;:282::i;:::-;26292:319;;26610:1;26603:8;;;;;;;26292:319;26628:1;26621:8;;;;;25508:1128;;;;;:::o;1065:112:5:-;1130:7;1156;:14;;;1149:21;;1065:112;;;:::o;11859:463:0:-;12010:4;12031:15;:2;:13;;;:15::i;:::-;12026:58;;12069:4;12062:11;;;;12026:58;12094:13;12138:2;12122:36;;;12176:10;12204:4;12226:7;12251:5;12122:148;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;12122:148:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12122:148:0;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12122:148:0;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12122:148:0;;;;;;;;;;;;;;;;12094:176;;4427:10;12298:16;;12288:26;;;:6;:26;;;;12280:35;;;11859:463;;;;;;;:::o;10531:800::-;10745:16;10753:7;10745;:16::i;:::-;10737:24;;:4;:24;;;10716:121;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10938:1;10924:16;;:2;:16;;;;10916:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11023:15;:24;11039:7;11023:24;;;;;;;;;;;;11016:31;;;;;;;;;;;11132:35;:17;:23;11150:4;11132:23;;;;;;;;;;;;;;;:33;:35::i;:::-;11200:2;11177:11;:20;11189:7;11177:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;11212:33;:17;:21;11230:2;11212:21;;;;;;;;;;;;;;;:31;:33::i;:::-;11316:7;11312:2;11297:27;;11306:4;11297:27;;;;;;;;;;;;10531:800;;;:::o;17795:1140::-;18069:22;18094:32;18124:1;18094:12;:18;18107:4;18094:18;;;;;;;;;;;;;;;:25;;;;:29;;:32;;;;:::i;:::-;18069:57;;18136:18;18157:17;:26;18175:7;18157:26;;;;;;;;;;;;18136:47;;18301:14;18287:10;:28;18283:323;;18331:19;18353:12;:18;18366:4;18353:18;;;;;;;;;;;;;;;18372:14;18353:34;;;;;;;;;;;;;;;;18331:56;;18435:11;18402:12;:18;18415:4;18402:18;;;;;;;;;;;;;;;18421:10;18402:30;;;;;;;;;;;;;;;:44;;;;18551:10;18518:17;:30;18536:11;18518:30;;;;;;;;;;;:43;;;;18283:323;;18692:12;:18;18705:4;18692:18;;;;;;;;;;;;;;;:27;;;;;;;;;;;;:::i;:::-;;17795:1140;;;;:::o;16641:183::-;16754:12;:16;16767:2;16754:16;;;;;;;;;;;;;;;:23;;;;16725:17;:26;16743:7;16725:26;;;;;;;;;;;:52;;;;16787:12;:16;16800:2;16787:16;;;;;;;;;;;;;;;16809:7;16787:30;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;16787:30:0;;;;;;;;;;;;;;;;;;;;;;16641:183;;:::o;9821:511::-;9884:12;9998:16;10006:7;9998;:16::i;:::-;9997:17;9989:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10064:4;10058:10;;:2;:10;;;;10050:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10201:2;10178:11;:20;10190:7;10178:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;10213:33;:17;:21;10231:2;10213:21;;;;;;;;;;;;;;;:31;:33::i;:::-;10317:7;10313:2;10298:27;;10307:4;10298:27;;;;;;;;;;;;9821:511;;;:::o;17019:161::-;17122:10;:17;;;;17095:15;:24;17111:7;17095:24;;;;;;;;;;;:44;;;;17149:10;17165:7;17149:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;17149:24:0;;;;;;;;;;;;;;;;;;;;;;17019:161;:::o;48041:509:2:-;48118:27;48171:1;48165:2;:7;48161:48;;;48188:10;;;;;;;;;;;;;;;;;;;;;48161:48;48218:9;48230:2;48218:14;;48242:11;48263:66;48275:1;48270;:6;48263:66;;48292:5;;;;;;;48316:2;48311:7;;;;;;;;;48263:66;;;48338:17;48368:3;48358:14;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;48358:14:2;;;;48338:34;;48382:9;48400:1;48394:3;:7;48382:19;;48411:104;48424:1;48418:2;:7;48411:104;;48477:2;48472;:7;;;;;;48466:2;:14;48453:29;;48441:4;48446:3;;;;;;;48441:9;;;;;;;;;;;:41;;;;;;;;;;;48502:2;48496:8;;;;;;;;;48411:104;;;48538:4;48524:19;;;;;;48041:509;;;;:::o;43974:194::-;44076:33;44132:29;44142:2;44146;44132:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:9;:29::i;:::-;44125:36;;43974:194;;;;:::o;22341:3161:4:-;22388:22;;:::i;:::-;22433:263;;;;;;;;22487:66;22433:263;;;;22606:66;22433:263;;;22422:2;:8;;:274;;;;22716:605;;;;;;;;;;;;;;;;22792:66;22716:605;;;;22923:66;22716:605;;;;;;;;;;;;;;;23082:66;22716:605;;;;23213:66;22716:605;;;;;;22706:2;:7;;:615;;;;23342:605;;;;;;;;;;;;;;;;23418:66;23342:605;;;;23549:66;23342:605;;;;;;;;;;;;;;;23708:66;23342:605;;;;23839:66;23342:605;;;;;;23331:2;:8;;:616;;;;23968:605;;;;;;;;;;;;;;;;24044:66;23968:605;;;;24175:66;23968:605;;;;;;;;;;;;;;;24334:66;23968:605;;;;24465:66;23968:605;;;;;;23957:2;:8;;:616;;;;24620:1;24598:24;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;24583:2;:12;;:39;;;;24650:263;;;;;;;;24704:66;24650:263;;;;24823:66;24650:263;;;24632:2;:12;;;24645:1;24632:15;;;;;;;;;;;;;:281;;;;24941:263;;;;;;;;24995:66;24941:263;;;;25114:66;24941:263;;;24923:2;:12;;;24936:1;24923:15;;;;;;;;;;;;;:281;;;;25232:263;;;;;;;;25286:66;25232:263;;;;25405:66;25232:263;;;25214:2;:12;;;25227:1;25214:15;;;;;;;;;;;;;:281;;;;22341:3161;:::o;18486:539::-;18582:16;;:::i;:::-;18614:23;;:::i;:::-;18658:1;:3;;;18647:5;18653:1;18647:8;;;;;;;;;;:14;;;;;18682:1;:3;;;18671:5;18677:1;18671:8;;;;;;;;;;:14;;;;;18706:1;18695:5;18701:1;18695:8;;;;;;;;;;:12;;;;;18717;18821:4;18818:1;18812:4;18805:5;18802:1;18795:4;18788:5;18784:16;18773:53;18762:64;;18903:7;18932:1;18927:56;;;;18896:87;;18927:56;18956:9;18896:87;;19010:7;19002:16;;;;;;18486:539;;;;;;:::o;17329:576::-;17432:16;;:::i;:::-;17464:23;;:::i;:::-;17508:2;:4;;;17497:5;17503:1;17497:8;;;;;;;;;;:15;;;;;17533:2;:4;;;17522:5;17528:1;17522:8;;;;;;;;;;:15;;;;;17558:2;:4;;;17547:5;17553:1;17547:8;;;;;;;;;;:15;;;;;17583:2;:4;;;17572:5;17578:1;17572:8;;;;;;;;;;:15;;;;;17597:12;17701:4;17698:1;17692:4;17685:5;17682:1;17675:4;17668:5;17664:16;17653:53;17642:64;;17783:7;17812:1;17807:56;;;;17776:87;;17807:56;17836:9;17776:87;;17890:7;17882:16;;;;;;17329:576;;;;;;:::o;16934:343::-;16991:14;;:::i;:::-;17069:9;17093:77;17069:101;;17191:1;17184;:3;;;:8;:20;;;;;17203:1;17196;:3;;;:8;17184:20;17180:46;;;17213:13;;;;;;;;17221:1;17213:13;;;;17224:1;17213:13;;;17206:20;;;;;17180:46;17243:27;;;;;;;;17251:1;:3;;;17243:27;;;;17267:1;17261;:3;;;:7;;;;;;17256:1;:13;17243:27;;;17236:34;;;16934:343;;;;:::o;21421:568::-;21688:4;21704:19;21740:1;21726:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;21704:38;;21752:19;21788:1;21774:16;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;21752:38;;21808:2;21800;21803:1;21800:5;;;;;;;;;;;;;:10;;;;21828:2;21820;21823:1;21820:5;;;;;;;;;;;;;:10;;;;21848:2;21840;21843:1;21840:5;;;;;;;;;;;;;:10;;;;21868:2;21860;21863:1;21860:5;;;;;;;;;;;;;:10;;;;21888:2;21880;21883:1;21880:5;;;;;;;;;;;;;:10;;;;21908:2;21900;21903:1;21900:5;;;;;;;;;;;;;:10;;;;21928:2;21920;21923:1;21920:5;;;;;;;;;;;;;:10;;;;21948:2;21940;21943:1;21940:5;;;;;;;;;;;;;:10;;;;21967:15;21975:2;21979;21967:7;:15::i;:::-;21960:22;;;;21421:568;;;;;;;;;;:::o;686:610:8:-;746:4;1004:16;1030:19;1052:66;1030:88;;;;1219:7;1207:20;1195:32;;1258:11;1246:8;:23;;:42;;;;;1285:3;1273:15;;:8;:15;;1246:42;1238:51;;;;686:610;;;:::o;1367:108:5:-;1447:21;1466:1;1447:7;:14;;;:18;;:21;;;;:::i;:::-;1430:7;:14;;:38;;;;1367:108;:::o;1183:178::-;1353:1;1335:7;:14;;;:19;;;;;;;;;;;1183:178;:::o;1274:134:6:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;44640:1114:2:-;44818:33;44863:16;44888:2;44863:28;;44901:16;44926:2;44901:28;;44939:16;44964:2;44939:28;;44977:16;45002:2;44977:28;;45015:16;45040:2;45015:28;;45053:19;45167:3;:10;45154:3;:10;45141:3;:10;45128:3;:10;45115:3;:10;:23;:36;:49;:62;45087:104;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;45087:104:2;;;;45053:138;;45201:19;45229:5;45201:34;;45245:9;45257:1;45245:13;;45268:9;45280:1;45268:13;;45300:1;45296:5;;45291:78;45307:3;:10;45303:1;:14;45291:78;;;45352:3;45356:1;45352:6;;;;;;;;;;;;;;;;45338;45345:3;;;;;;45338:11;;;;;;;;;;;:20;;;;;;;;;;;45319:3;;;;;;;45291:78;;;45387:1;45383:5;;45378:78;45394:3;:10;45390:1;:14;45378:78;;;45439:3;45443:1;45439:6;;;;;;;;;;;;;;;;45425;45432:3;;;;;;45425:11;;;;;;;;;;;:20;;;;;;;;;;;45406:3;;;;;;;45378:78;;;45474:1;45470:5;;45465:78;45481:3;:10;45477:1;:14;45465:78;;;45526:3;45530:1;45526:6;;;;;;;;;;;;;;;;45512;45519:3;;;;;;45512:11;;;;;;;;;;;:20;;;;;;;;;;;45493:3;;;;;;;45465:78;;;45561:1;45557:5;;45552:78;45568:3;:10;45564:1;:14;45552:78;;;45613:3;45617:1;45613:6;;;;;;;;;;;;;;;;45599;45606:3;;;;;;45599:11;;;;;;;;;;;:20;;;;;;;;;;;45580:3;;;;;;;45552:78;;;45648:1;45644:5;;45639:78;45655:3;:10;45651:1;:14;45639:78;;;45700:3;45704:1;45700:6;;;;;;;;;;;;;;;;45686;45693:3;;;;;;45686:11;;;;;;;;;;;:20;;;;;;;;;;;45667:3;;;;;;;45639:78;;;45740:6;45726:21;;;;;;;;;;;44640:1114;;;;;;;:::o;19237:1123:4:-;19343:4;19384:2;:9;19371:2;:9;:22;19363:31;;;;;;19404:16;19423:2;:9;19404:28;;19442:17;19473:1;19462:8;:12;19442:32;;19484:22;19523:9;19509:24;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;19509:24:4;;;;19484:49;;19548:9;19560:1;19548:13;;19543:302;19567:8;19563:1;:12;19543:302;;;19615:2;19618:1;19615:5;;;;;;;;;;;;;;:7;;;19596:5;19610:1;19606;19602;:5;:9;19596:16;;;;;;;;;;;;;:26;;;;;19655:2;19658:1;19655:5;;;;;;;;;;;;;;:7;;;19636:5;19650:1;19646;19642;:5;:9;19636:16;;;;;;;;;;;;;:26;;;;;19695:2;19698:1;19695:5;;;;;;;;;;;;;;:7;;;19703:1;19695:10;;;;;;;;;;;19676:5;19690:1;19686;19682;:5;:9;19676:16;;;;;;;;;;;;;:29;;;;;19738:2;19741:1;19738:5;;;;;;;;;;;;;;:7;;;19746:1;19738:10;;;;;;;;;;;19719:5;19733:1;19729;19725;:5;:9;19719:16;;;;;;;;;;;;;:29;;;;;19781:2;19784:1;19781:5;;;;;;;;;;;;;;:7;;;19789:1;19781:10;;;;;;;;;;;19762:5;19776:1;19772;19768;:5;:9;19762:16;;;;;;;;;;;;;:29;;;;;19824:2;19827:1;19824:5;;;;;;;;;;;;;;:7;;;19832:1;19824:10;;;;;;;;;;;19805:5;19819:1;19815;19811;:5;:9;19805:16;;;;;;;;;;;;;:29;;;;;19577:3;;;;;;;19543:302;;;;19854:21;;:::i;:::-;19885:12;20115:4;20094:3;20071:4;20060:9;20056:20;20033:4;20026:5;20022:16;20003:1;19980:4;19973:5;19969:16;19941:192;19930:203;;20210:7;20239:1;20234:56;;;;20203:87;;20234:56;20263:9;20203:87;;20317:7;20309:16;;;;;;20352:1;20342:3;20346:1;20342:6;;;;;;;;;;;:11;;20335:18;;;;;;;19237:1123;;;;:::o;1732:187:6:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1837:29:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;357:2222:3:-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;357:2222:3;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;357:2222:3;;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;357:2222:3;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;357:2222:3;;;;:::o",
  "source": "pragma solidity >=0.4.21 <0.6.0;\n\nimport \"../../zokrates/code/square/verifier.sol\";\nimport \"./ERC721Mintable.sol\";\n\n// TODO define a contract call to the zokrates generated solidity contract <Verifier> or <renamedVerifier>\n// Inharited Verifier contract\n\n// TODO define another contract named SolnSquareVerifier that inherits from your ERC721Mintable class\ncontract SolnSquareVerifier is CustomERC721Token, Verifier {\n    constructor(string memory name, string memory symbol)\n        public\n        CustomERC721Token(name, symbol)\n    {}\n\n    // TODO define a solutions struct that can hold an index & an address\n    struct Solution {\n        bytes32 index;\n        address sender;\n        uint256 token;\n    }\n    // TODO define an array of the above struct\n    Solution[] private _solutions;\n\n    // TODO define a mapping to store unique solutions submitted\n    mapping(address => Solution) private _solutionsMap;\n\n    // Keeping track of unique solution using \"exists\" map\n    mapping(bytes32 => bool) private _existsMap;\n\n    // TODO Create an event to emit when a solution is added\n    event SolutionAdded(address sender);\n\n    // verifying solution exists\n    function solutionExists(address owner) public view returns (bool exists) {\n        exists = _existsMap[_solutionsMap[owner].index];\n    }\n\n    // TODO Create a function to add the solutions to the array and emit the event\n    function addSolution(\n        uint256[2] memory a,\n        uint256[2][2] memory b,\n        uint256[2] memory c,\n        uint256[2] memory input\n    ) public {\n        bytes32 index = keccak256(abi.encodePacked(a, b, c, input));\n        require(!_existsMap[index], \"Solution already exists!\");\n        require(verifyTx(a, b, c, input), \"Solution was not verified!\");\n\n        Solution memory solution =\n            Solution({index: index, sender: msg.sender, token: 0});\n        _solutions.push(solution);\n        _existsMap[index] = true;\n        _solutionsMap[msg.sender] = solution;\n\n        emit SolutionAdded(msg.sender);\n    }\n\n    // TODO Create a function to mint new NFT only after the solution has been verified\n    //  - make sure the solution is unique (has not been used before)\n    //  - make sure you handle metadata as well as tokenSuplly\n    function mintNFT(address to, uint256 tokenId) public returns (bool minted) {\n        require(_solutionsMap[to].index > 0, \"404 Solution Not Found!\");\n        require(_solutionsMap[to].token == 0, \"Solution already has token\");\n\n        _mint(to, tokenId);\n        _solutionsMap[to].token = tokenId;\n        minted = true;\n    }\n}\n",
  "sourcePath": "/home/lium/Dev/Udacity/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol",
  "ast": {
    "absolutePath": "/home/lium/Dev/Udacity/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol",
    "exportedSymbols": {
      "SolnSquareVerifier": [
        7668
      ]
    },
    "id": 7669,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7479,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".21",
          "<",
          "0.6",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:32:3"
      },
      {
        "absolutePath": "/home/lium/Dev/Udacity/Blockchain-Capstone/zokrates/code/square/verifier.sol",
        "file": "../../zokrates/code/square/verifier.sol",
        "id": 7480,
        "nodeType": "ImportDirective",
        "scope": 7669,
        "sourceUnit": 10219,
        "src": "34:49:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/lium/Dev/Udacity/Blockchain-Capstone/eth-contracts/contracts/ERC721Mintable.sol",
        "file": "./ERC721Mintable.sol",
        "id": 7481,
        "nodeType": "ImportDirective",
        "scope": 7669,
        "sourceUnit": 1152,
        "src": "84:30:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7482,
              "name": "CustomERC721Token",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1151,
              "src": "388:17:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CustomERC721Token_$1151",
                "typeString": "contract CustomERC721Token"
              }
            },
            "id": 7483,
            "nodeType": "InheritanceSpecifier",
            "src": "388:17:3"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 7484,
              "name": "Verifier",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 10218,
              "src": "407:8:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Verifier_$10218",
                "typeString": "contract Verifier"
              }
            },
            "id": 7485,
            "nodeType": "InheritanceSpecifier",
            "src": "407:8:3"
          }
        ],
        "contractDependencies": [
          83,
          149,
          195,
          694,
          992,
          1110,
          1151,
          7477,
          10218
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 7668,
        "linearizedBaseContracts": [
          7668,
          10218,
          1151,
          1110,
          7477,
          992,
          694,
          195,
          149,
          83
        ],
        "name": "SolnSquareVerifier",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 7496,
              "nodeType": "Block",
              "src": "535:2:3",
              "statements": []
            },
            "documentation": null,
            "id": 7497,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 7492,
                    "name": "name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7487,
                    "src": "517:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 7493,
                    "name": "symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7489,
                    "src": "523:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 7494,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 7491,
                  "name": "CustomERC721Token",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1151,
                  "src": "499:17:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CustomERC721Token_$1151_$",
                    "typeString": "type(contract CustomERC721Token)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "499:31:3"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7490,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7487,
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 7497,
                  "src": "434:18:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7486,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "434:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7489,
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 7497,
                  "src": "454:20:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 7488,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "454:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "433:42:3"
            },
            "returnParameters": {
              "id": 7495,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "535:0:3"
            },
            "scope": 7668,
            "src": "422:115:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "canonicalName": "SolnSquareVerifier.Solution",
            "id": 7504,
            "members": [
              {
                "constant": false,
                "id": 7499,
                "name": "index",
                "nodeType": "VariableDeclaration",
                "scope": 7504,
                "src": "643:13:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 7498,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "643:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7501,
                "name": "sender",
                "nodeType": "VariableDeclaration",
                "scope": 7504,
                "src": "666:14:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 7500,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "666:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7503,
                "name": "token",
                "nodeType": "VariableDeclaration",
                "scope": 7504,
                "src": "690:13:3",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 7502,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "690:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Solution",
            "nodeType": "StructDefinition",
            "scope": 7668,
            "src": "617:93:3",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 7507,
            "name": "_solutions",
            "nodeType": "VariableDeclaration",
            "scope": 7668,
            "src": "763:29:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Solution_$7504_storage_$dyn_storage",
              "typeString": "struct SolnSquareVerifier.Solution[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 7505,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7504,
                "src": "763:8:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7504_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              },
              "id": 7506,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "763:10:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Solution_$7504_storage_$dyn_storage_ptr",
                "typeString": "struct SolnSquareVerifier.Solution[]"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 7511,
            "name": "_solutionsMap",
            "nodeType": "VariableDeclaration",
            "scope": 7668,
            "src": "864:50:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Solution_$7504_storage_$",
              "typeString": "mapping(address => struct SolnSquareVerifier.Solution)"
            },
            "typeName": {
              "id": 7510,
              "keyType": {
                "id": 7508,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "872:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "864:28:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Solution_$7504_storage_$",
                "typeString": "mapping(address => struct SolnSquareVerifier.Solution)"
              },
              "valueType": {
                "contractScope": null,
                "id": 7509,
                "name": "Solution",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 7504,
                "src": "883:8:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Solution_$7504_storage_ptr",
                  "typeString": "struct SolnSquareVerifier.Solution"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 7515,
            "name": "_existsMap",
            "nodeType": "VariableDeclaration",
            "scope": 7668,
            "src": "980:43:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 7514,
              "keyType": {
                "id": 7512,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "988:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "980:24:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 7513,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "999:4:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 7519,
            "name": "SolutionAdded",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7518,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7517,
                  "indexed": false,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 7519,
                  "src": "1111:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7516,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1111:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1110:16:3"
            },
            "src": "1091:36:3"
          },
          {
            "body": {
              "id": 7535,
              "nodeType": "Block",
              "src": "1239:64:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7526,
                      "name": "exists",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7524,
                      "src": "1249:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7527,
                        "name": "_existsMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7515,
                        "src": "1258:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 7532,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 7528,
                            "name": "_solutionsMap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7511,
                            "src": "1269:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Solution_$7504_storage_$",
                              "typeString": "mapping(address => struct SolnSquareVerifier.Solution storage ref)"
                            }
                          },
                          "id": 7530,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 7529,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7521,
                            "src": "1283:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1269:20:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Solution_$7504_storage",
                            "typeString": "struct SolnSquareVerifier.Solution storage ref"
                          }
                        },
                        "id": 7531,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "index",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7499,
                        "src": "1269:26:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1258:38:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1249:47:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7534,
                  "nodeType": "ExpressionStatement",
                  "src": "1249:47:3"
                }
              ]
            },
            "documentation": null,
            "id": 7536,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "solutionExists",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7522,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7521,
                  "name": "owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 7536,
                  "src": "1190:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7520,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1190:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1189:15:3"
            },
            "returnParameters": {
              "id": 7525,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7524,
                  "name": "exists",
                  "nodeType": "VariableDeclaration",
                  "scope": 7536,
                  "src": "1226:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7523,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1226:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1225:13:3"
            },
            "scope": 7668,
            "src": "1166:137:3",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7620,
              "nodeType": "Block",
              "src": "1549:474:3",
              "statements": [
                {
                  "assignments": [
                    7558
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7558,
                      "name": "index",
                      "nodeType": "VariableDeclaration",
                      "scope": 7620,
                      "src": "1559:13:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 7557,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1559:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7568,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7562,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7540,
                            "src": "1602:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7563,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7546,
                            "src": "1605:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                              "typeString": "uint256[2] memory[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7564,
                            "name": "c",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7550,
                            "src": "1608:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7565,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7554,
                            "src": "1611:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                              "typeString": "uint256[2] memory[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 7560,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10547,
                            "src": "1585:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 7561,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "1585:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 7566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1585:32:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 7559,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10554,
                      "src": "1575:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 7567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1575:43:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1559:59:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1636:18:3",
                        "subExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 7570,
                            "name": "_existsMap",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7515,
                            "src": "1637:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                              "typeString": "mapping(bytes32 => bool)"
                            }
                          },
                          "id": 7572,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 7571,
                            "name": "index",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7558,
                            "src": "1648:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1637:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f6c7574696f6e20616c72656164792065786973747321",
                        "id": 7574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1656:26:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e6eaa908a56bf1d9fb54bdca8cfb18da2fa9fde71b0942492ebb42a56da61c24",
                          "typeString": "literal_string \"Solution already exists!\""
                        },
                        "value": "Solution already exists!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e6eaa908a56bf1d9fb54bdca8cfb18da2fa9fde71b0942492ebb42a56da61c24",
                          "typeString": "literal_string \"Solution already exists!\""
                        }
                      ],
                      "id": 7569,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10563,
                        10564
                      ],
                      "referencedDeclaration": 10564,
                      "src": "1628:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1628:55:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7576,
                  "nodeType": "ExpressionStatement",
                  "src": "1628:55:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 7579,
                            "name": "a",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7540,
                            "src": "1710:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7580,
                            "name": "b",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7546,
                            "src": "1713:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                              "typeString": "uint256[2] memory[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7581,
                            "name": "c",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7550,
                            "src": "1716:1:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 7582,
                            "name": "input",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7554,
                            "src": "1719:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                              "typeString": "uint256[2] memory[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            },
                            {
                              "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                              "typeString": "uint256[2] memory"
                            }
                          ],
                          "id": 7578,
                          "name": "verifyTx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10217,
                          "src": "1701:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$_t_array$_t_uint256_$2_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (uint256[2] memory,uint256[2] memory[2] memory,uint256[2] memory,uint256[2] memory) view returns (bool)"
                          }
                        },
                        "id": 7583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1701:24:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f6c7574696f6e20776173206e6f7420766572696669656421",
                        "id": 7584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1727:28:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_db9868e661204c0b3f549a4734f603b51c28ceb4b4822fd2737aff5d3d776e97",
                          "typeString": "literal_string \"Solution was not verified!\""
                        },
                        "value": "Solution was not verified!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_db9868e661204c0b3f549a4734f603b51c28ceb4b4822fd2737aff5d3d776e97",
                          "typeString": "literal_string \"Solution was not verified!\""
                        }
                      ],
                      "id": 7577,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10563,
                        10564
                      ],
                      "referencedDeclaration": 10564,
                      "src": "1693:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1693:63:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7586,
                  "nodeType": "ExpressionStatement",
                  "src": "1693:63:3"
                },
                {
                  "assignments": [
                    7588
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 7588,
                      "name": "solution",
                      "nodeType": "VariableDeclaration",
                      "scope": 7620,
                      "src": "1767:24:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7504_memory_ptr",
                        "typeString": "struct SolnSquareVerifier.Solution"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 7587,
                        "name": "Solution",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 7504,
                        "src": "1767:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7504_storage_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 7595,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7590,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7558,
                        "src": "1823:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7591,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10560,
                          "src": "1838:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1838:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 7593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1857:1:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 7589,
                      "name": "Solution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7504,
                      "src": "1806:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_Solution_$7504_storage_ptr_$",
                        "typeString": "type(struct SolnSquareVerifier.Solution storage pointer)"
                      }
                    },
                    "id": 7594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "index",
                      "sender",
                      "token"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "1806:54:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7504_memory",
                      "typeString": "struct SolnSquareVerifier.Solution memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1767:93:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7599,
                        "name": "solution",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7588,
                        "src": "1886:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7504_memory_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Solution_$7504_memory_ptr",
                          "typeString": "struct SolnSquareVerifier.Solution memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 7596,
                        "name": "_solutions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7507,
                        "src": "1870:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Solution_$7504_storage_$dyn_storage",
                          "typeString": "struct SolnSquareVerifier.Solution storage ref[] storage ref"
                        }
                      },
                      "id": 7598,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1870:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Solution_$7504_storage_$returns$_t_uint256_$",
                        "typeString": "function (struct SolnSquareVerifier.Solution storage ref) returns (uint256)"
                      }
                    },
                    "id": 7600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1870:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7601,
                  "nodeType": "ExpressionStatement",
                  "src": "1870:25:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7602,
                        "name": "_existsMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7515,
                        "src": "1905:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 7604,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 7603,
                        "name": "index",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7558,
                        "src": "1916:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1905:17:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 7605,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1925:4:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1905:24:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7607,
                  "nodeType": "ExpressionStatement",
                  "src": "1905:24:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 7608,
                        "name": "_solutionsMap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7511,
                        "src": "1939:13:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Solution_$7504_storage_$",
                          "typeString": "mapping(address => struct SolnSquareVerifier.Solution storage ref)"
                        }
                      },
                      "id": 7611,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7609,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10560,
                          "src": "1953:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7610,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1953:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1939:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7504_storage",
                        "typeString": "struct SolnSquareVerifier.Solution storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7612,
                      "name": "solution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7588,
                      "src": "1967:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Solution_$7504_memory_ptr",
                        "typeString": "struct SolnSquareVerifier.Solution memory"
                      }
                    },
                    "src": "1939:36:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Solution_$7504_storage",
                      "typeString": "struct SolnSquareVerifier.Solution storage ref"
                    }
                  },
                  "id": 7614,
                  "nodeType": "ExpressionStatement",
                  "src": "1939:36:3"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 7616,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10560,
                          "src": "2005:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 7617,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2005:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 7615,
                      "name": "SolutionAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7519,
                      "src": "1991:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 7618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1991:25:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7619,
                  "nodeType": "EmitStatement",
                  "src": "1986:30:3"
                }
              ]
            },
            "documentation": null,
            "id": 7621,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addSolution",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7555,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7540,
                  "name": "a",
                  "nodeType": "VariableDeclaration",
                  "scope": 7621,
                  "src": "1422:19:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7537,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1422:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7539,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7538,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1430:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1422:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7546,
                  "name": "b",
                  "nodeType": "VariableDeclaration",
                  "scope": 7621,
                  "src": "1451:22:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                    "typeString": "uint256[2][2]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 7541,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1451:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 7543,
                      "length": {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 7542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1459:1:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "nodeType": "ArrayTypeName",
                      "src": "1451:10:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                        "typeString": "uint256[2]"
                      }
                    },
                    "id": 7545,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7544,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1462:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1451:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$2_storage_$2_storage_ptr",
                      "typeString": "uint256[2][2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7550,
                  "name": "c",
                  "nodeType": "VariableDeclaration",
                  "scope": 7621,
                  "src": "1483:19:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7547,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1483:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7549,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7548,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1491:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1483:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7554,
                  "name": "input",
                  "nodeType": "VariableDeclaration",
                  "scope": 7621,
                  "src": "1512:23:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 7551,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1512:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 7553,
                    "length": {
                      "argumentTypes": null,
                      "hexValue": "32",
                      "id": 7552,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1520:1:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1512:10:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1412:129:3"
            },
            "returnParameters": {
              "id": 7556,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1549:0:3"
            },
            "scope": 7668,
            "src": "1392:631:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7666,
              "nodeType": "Block",
              "src": "2325:252:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 7636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 7631,
                              "name": "_solutionsMap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7511,
                              "src": "2343:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Solution_$7504_storage_$",
                                "typeString": "mapping(address => struct SolnSquareVerifier.Solution storage ref)"
                              }
                            },
                            "id": 7633,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 7632,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7623,
                              "src": "2357:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2343:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Solution_$7504_storage",
                              "typeString": "struct SolnSquareVerifier.Solution storage ref"
                            }
                          },
                          "id": 7634,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "index",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7499,
                          "src": "2343:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 7635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2369:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2343:27:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "34303420536f6c7574696f6e204e6f7420466f756e6421",
                        "id": 7637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2372:25:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6b6f13b126b44756fa775c943d5fe139737fd50242b46fee15d93e5b9d151ca5",
                          "typeString": "literal_string \"404 Solution Not Found!\""
                        },
                        "value": "404 Solution Not Found!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6b6f13b126b44756fa775c943d5fe139737fd50242b46fee15d93e5b9d151ca5",
                          "typeString": "literal_string \"404 Solution Not Found!\""
                        }
                      ],
                      "id": 7630,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10563,
                        10564
                      ],
                      "referencedDeclaration": 10564,
                      "src": "2335:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2335:63:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7639,
                  "nodeType": "ExpressionStatement",
                  "src": "2335:63:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 7646,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 7641,
                              "name": "_solutionsMap",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7511,
                              "src": "2416:13:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Solution_$7504_storage_$",
                                "typeString": "mapping(address => struct SolnSquareVerifier.Solution storage ref)"
                              }
                            },
                            "id": 7643,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 7642,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7623,
                              "src": "2430:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2416:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Solution_$7504_storage",
                              "typeString": "struct SolnSquareVerifier.Solution storage ref"
                            }
                          },
                          "id": 7644,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "token",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7503,
                          "src": "2416:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 7645,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2443:1:3",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2416:28:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "536f6c7574696f6e20616c72656164792068617320746f6b656e",
                        "id": 7647,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2446:28:3",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c8a73b308e584d74df42bc8d26774895f1893d571d69c5baecb3df6d0657f447",
                          "typeString": "literal_string \"Solution already has token\""
                        },
                        "value": "Solution already has token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c8a73b308e584d74df42bc8d26774895f1893d571d69c5baecb3df6d0657f447",
                          "typeString": "literal_string \"Solution already has token\""
                        }
                      ],
                      "id": 7640,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10563,
                        10564
                      ],
                      "referencedDeclaration": 10564,
                      "src": "2408:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2408:67:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7649,
                  "nodeType": "ExpressionStatement",
                  "src": "2408:67:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 7651,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7623,
                        "src": "2492:2:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 7652,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7625,
                        "src": "2496:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 7650,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        829
                      ],
                      "referencedDeclaration": 829,
                      "src": "2486:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 7653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2486:18:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7654,
                  "nodeType": "ExpressionStatement",
                  "src": "2486:18:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7660,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 7655,
                          "name": "_solutionsMap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7511,
                          "src": "2514:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Solution_$7504_storage_$",
                            "typeString": "mapping(address => struct SolnSquareVerifier.Solution storage ref)"
                          }
                        },
                        "id": 7657,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 7656,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7623,
                          "src": "2528:2:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2514:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Solution_$7504_storage",
                          "typeString": "struct SolnSquareVerifier.Solution storage ref"
                        }
                      },
                      "id": 7658,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "token",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7503,
                      "src": "2514:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 7659,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7625,
                      "src": "2540:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2514:33:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 7661,
                  "nodeType": "ExpressionStatement",
                  "src": "2514:33:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 7664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 7662,
                      "name": "minted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7628,
                      "src": "2557:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 7663,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2566:4:3",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2557:13:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7665,
                  "nodeType": "ExpressionStatement",
                  "src": "2557:13:3"
                }
              ]
            },
            "documentation": null,
            "id": 7667,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintNFT",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7626,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7623,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 7667,
                  "src": "2267:10:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 7622,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2267:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7625,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 7667,
                  "src": "2279:15:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 7624,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2279:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2266:29:3"
            },
            "returnParameters": {
              "id": 7629,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7628,
                  "name": "minted",
                  "nodeType": "VariableDeclaration",
                  "scope": 7667,
                  "src": "2312:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 7627,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2312:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2311:13:3"
            },
            "scope": 7668,
            "src": "2250:327:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 7669,
        "src": "357:2222:3"
      }
    ],
    "src": "0:2580:3"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/home/lium/Dev/Udacity/Blockchain-Capstone/eth-contracts/contracts/SolnSquareVerifier.sol",
      "exportedSymbols": {
        "SolnSquareVerifier": [
          7668
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            ">=",
            "0.4",
            ".21",
            "<",
            "0.6",
            ".0"
          ]
        },
        "id": 7479,
        "name": "PragmaDirective",
        "src": "0:32:3"
      },
      {
        "attributes": {
          "SourceUnit": 10219,
          "absolutePath": "/home/lium/Dev/Udacity/Blockchain-Capstone/zokrates/code/square/verifier.sol",
          "file": "../../zokrates/code/square/verifier.sol",
          "scope": 7669,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7480,
        "name": "ImportDirective",
        "src": "34:49:3"
      },
      {
        "attributes": {
          "SourceUnit": 1152,
          "absolutePath": "/home/lium/Dev/Udacity/Blockchain-Capstone/eth-contracts/contracts/ERC721Mintable.sol",
          "file": "./ERC721Mintable.sol",
          "scope": 7669,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 7481,
        "name": "ImportDirective",
        "src": "84:30:3"
      },
      {
        "attributes": {
          "contractDependencies": [
            83,
            149,
            195,
            694,
            992,
            1110,
            1151,
            7477,
            10218
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            7668,
            10218,
            1151,
            1110,
            7477,
            992,
            694,
            195,
            149,
            83
          ],
          "name": "SolnSquareVerifier",
          "scope": 7669
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "CustomERC721Token",
                  "referencedDeclaration": 1151,
                  "type": "contract CustomERC721Token"
                },
                "id": 7482,
                "name": "UserDefinedTypeName",
                "src": "388:17:3"
              }
            ],
            "id": 7483,
            "name": "InheritanceSpecifier",
            "src": "388:17:3"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Verifier",
                  "referencedDeclaration": 10218,
                  "type": "contract Verifier"
                },
                "id": 7484,
                "name": "UserDefinedTypeName",
                "src": "407:8:3"
              }
            ],
            "id": 7485,
            "name": "InheritanceSpecifier",
            "src": "407:8:3"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "scope": 7668,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "name",
                      "scope": 7497,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 7486,
                        "name": "ElementaryTypeName",
                        "src": "434:6:3"
                      }
                    ],
                    "id": 7487,
                    "name": "VariableDeclaration",
                    "src": "434:18:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "symbol",
                      "scope": 7497,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "string",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "string",
                          "type": "string"
                        },
                        "id": 7488,
                        "name": "ElementaryTypeName",
                        "src": "454:6:3"
                      }
                    ],
                    "id": 7489,
                    "name": "VariableDeclaration",
                    "src": "454:20:3"
                  }
                ],
                "id": 7490,
                "name": "ParameterList",
                "src": "433:42:3"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7495,
                "name": "ParameterList",
                "src": "535:0:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1151,
                      "type": "type(contract CustomERC721Token)",
                      "value": "CustomERC721Token"
                    },
                    "id": 7491,
                    "name": "Identifier",
                    "src": "499:17:3"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 7487,
                      "type": "string memory",
                      "value": "name"
                    },
                    "id": 7492,
                    "name": "Identifier",
                    "src": "517:4:3"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 7489,
                      "type": "string memory",
                      "value": "symbol"
                    },
                    "id": 7493,
                    "name": "Identifier",
                    "src": "523:6:3"
                  }
                ],
                "id": 7494,
                "name": "ModifierInvocation",
                "src": "499:31:3"
              },
              {
                "attributes": {
                  "statements": [
                    null
                  ]
                },
                "children": [],
                "id": 7496,
                "name": "Block",
                "src": "535:2:3"
              }
            ],
            "id": 7497,
            "name": "FunctionDefinition",
            "src": "422:115:3"
          },
          {
            "attributes": {
              "canonicalName": "SolnSquareVerifier.Solution",
              "name": "Solution",
              "scope": 7668,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "index",
                  "scope": 7504,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "bytes32",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bytes32",
                      "type": "bytes32"
                    },
                    "id": 7498,
                    "name": "ElementaryTypeName",
                    "src": "643:7:3"
                  }
                ],
                "id": 7499,
                "name": "VariableDeclaration",
                "src": "643:13:3"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "sender",
                  "scope": 7504,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "address",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "stateMutability": "nonpayable",
                      "type": "address"
                    },
                    "id": 7500,
                    "name": "ElementaryTypeName",
                    "src": "666:7:3"
                  }
                ],
                "id": 7501,
                "name": "VariableDeclaration",
                "src": "666:14:3"
              },
              {
                "attributes": {
                  "constant": false,
                  "name": "token",
                  "scope": 7504,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 7502,
                    "name": "ElementaryTypeName",
                    "src": "690:7:3"
                  }
                ],
                "id": 7503,
                "name": "VariableDeclaration",
                "src": "690:13:3"
              }
            ],
            "id": 7504,
            "name": "StructDefinition",
            "src": "617:93:3"
          },
          {
            "attributes": {
              "constant": false,
              "name": "_solutions",
              "scope": 7668,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "struct SolnSquareVerifier.Solution[]",
              "value": null,
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "length": null,
                  "type": "struct SolnSquareVerifier.Solution[]"
                },
                "children": [
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Solution",
                      "referencedDeclaration": 7504,
                      "type": "struct SolnSquareVerifier.Solution"
                    },
                    "id": 7505,
                    "name": "UserDefinedTypeName",
                    "src": "763:8:3"
                  }
                ],
                "id": 7506,
                "name": "ArrayTypeName",
                "src": "763:10:3"
              }
            ],
            "id": 7507,
            "name": "VariableDeclaration",
            "src": "763:29:3"
          },
          {
            "attributes": {
              "constant": false,
              "name": "_solutionsMap",
              "scope": 7668,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(address => struct SolnSquareVerifier.Solution)",
              "value": null,
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(address => struct SolnSquareVerifier.Solution)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "address",
                      "type": "address"
                    },
                    "id": 7508,
                    "name": "ElementaryTypeName",
                    "src": "872:7:3"
                  },
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "Solution",
                      "referencedDeclaration": 7504,
                      "type": "struct SolnSquareVerifier.Solution"
                    },
                    "id": 7509,
                    "name": "UserDefinedTypeName",
                    "src": "883:8:3"
                  }
                ],
                "id": 7510,
                "name": "Mapping",
                "src": "864:28:3"
              }
            ],
            "id": 7511,
            "name": "VariableDeclaration",
            "src": "864:50:3"
          },
          {
            "attributes": {
              "constant": false,
              "name": "_existsMap",
              "scope": 7668,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "mapping(bytes32 => bool)",
              "value": null,
              "visibility": "private"
            },
            "children": [
              {
                "attributes": {
                  "type": "mapping(bytes32 => bool)"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "bytes32",
                      "type": "bytes32"
                    },
                    "id": 7512,
                    "name": "ElementaryTypeName",
                    "src": "988:7:3"
                  },
                  {
                    "attributes": {
                      "name": "bool",
                      "type": "bool"
                    },
                    "id": 7513,
                    "name": "ElementaryTypeName",
                    "src": "999:4:3"
                  }
                ],
                "id": 7514,
                "name": "Mapping",
                "src": "980:24:3"
              }
            ],
            "id": 7515,
            "name": "VariableDeclaration",
            "src": "980:43:3"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "SolutionAdded"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "sender",
                      "scope": 7519,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7516,
                        "name": "ElementaryTypeName",
                        "src": "1111:7:3"
                      }
                    ],
                    "id": 7517,
                    "name": "VariableDeclaration",
                    "src": "1111:14:3"
                  }
                ],
                "id": 7518,
                "name": "ParameterList",
                "src": "1110:16:3"
              }
            ],
            "id": 7519,
            "name": "EventDefinition",
            "src": "1091:36:3"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "solutionExists",
              "scope": 7668,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "owner",
                      "scope": 7536,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7520,
                        "name": "ElementaryTypeName",
                        "src": "1190:7:3"
                      }
                    ],
                    "id": 7521,
                    "name": "VariableDeclaration",
                    "src": "1190:13:3"
                  }
                ],
                "id": 7522,
                "name": "ParameterList",
                "src": "1189:15:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "exists",
                      "scope": 7536,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 7523,
                        "name": "ElementaryTypeName",
                        "src": "1226:4:3"
                      }
                    ],
                    "id": 7524,
                    "name": "VariableDeclaration",
                    "src": "1226:11:3"
                  }
                ],
                "id": 7525,
                "name": "ParameterList",
                "src": "1225:13:3"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7524,
                              "type": "bool",
                              "value": "exists"
                            },
                            "id": 7526,
                            "name": "Identifier",
                            "src": "1249:6:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7515,
                                  "type": "mapping(bytes32 => bool)",
                                  "value": "_existsMap"
                                },
                                "id": 7527,
                                "name": "Identifier",
                                "src": "1258:10:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "index",
                                  "referencedDeclaration": 7499,
                                  "type": "bytes32"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct SolnSquareVerifier.Solution storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7511,
                                          "type": "mapping(address => struct SolnSquareVerifier.Solution storage ref)",
                                          "value": "_solutionsMap"
                                        },
                                        "id": 7528,
                                        "name": "Identifier",
                                        "src": "1269:13:3"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7521,
                                          "type": "address",
                                          "value": "owner"
                                        },
                                        "id": 7529,
                                        "name": "Identifier",
                                        "src": "1283:5:3"
                                      }
                                    ],
                                    "id": 7530,
                                    "name": "IndexAccess",
                                    "src": "1269:20:3"
                                  }
                                ],
                                "id": 7531,
                                "name": "MemberAccess",
                                "src": "1269:26:3"
                              }
                            ],
                            "id": 7532,
                            "name": "IndexAccess",
                            "src": "1258:38:3"
                          }
                        ],
                        "id": 7533,
                        "name": "Assignment",
                        "src": "1249:47:3"
                      }
                    ],
                    "id": 7534,
                    "name": "ExpressionStatement",
                    "src": "1249:47:3"
                  }
                ],
                "id": 7535,
                "name": "Block",
                "src": "1239:64:3"
              }
            ],
            "id": 7536,
            "name": "FunctionDefinition",
            "src": "1166:137:3"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "addSolution",
              "scope": 7668,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "a",
                      "scope": 7621,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 7537,
                            "name": "ElementaryTypeName",
                            "src": "1422:7:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7538,
                            "name": "Literal",
                            "src": "1430:1:3"
                          }
                        ],
                        "id": 7539,
                        "name": "ArrayTypeName",
                        "src": "1422:10:3"
                      }
                    ],
                    "id": 7540,
                    "name": "VariableDeclaration",
                    "src": "1422:19:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "b",
                      "scope": 7621,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2][2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2][2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "type": "uint256[2]"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "name": "uint256",
                                  "type": "uint256"
                                },
                                "id": 7541,
                                "name": "ElementaryTypeName",
                                "src": "1451:7:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "32",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 2",
                                  "value": "2"
                                },
                                "id": 7542,
                                "name": "Literal",
                                "src": "1459:1:3"
                              }
                            ],
                            "id": 7543,
                            "name": "ArrayTypeName",
                            "src": "1451:10:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7544,
                            "name": "Literal",
                            "src": "1462:1:3"
                          }
                        ],
                        "id": 7545,
                        "name": "ArrayTypeName",
                        "src": "1451:13:3"
                      }
                    ],
                    "id": 7546,
                    "name": "VariableDeclaration",
                    "src": "1451:22:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "c",
                      "scope": 7621,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 7547,
                            "name": "ElementaryTypeName",
                            "src": "1483:7:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7548,
                            "name": "Literal",
                            "src": "1491:1:3"
                          }
                        ],
                        "id": 7549,
                        "name": "ArrayTypeName",
                        "src": "1483:10:3"
                      }
                    ],
                    "id": 7550,
                    "name": "VariableDeclaration",
                    "src": "1483:19:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "input",
                      "scope": 7621,
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "type": "uint256[2]",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "type": "uint256[2]"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 7551,
                            "name": "ElementaryTypeName",
                            "src": "1512:7:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "32",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 2",
                              "value": "2"
                            },
                            "id": 7552,
                            "name": "Literal",
                            "src": "1520:1:3"
                          }
                        ],
                        "id": 7553,
                        "name": "ArrayTypeName",
                        "src": "1512:10:3"
                      }
                    ],
                    "id": 7554,
                    "name": "VariableDeclaration",
                    "src": "1512:23:3"
                  }
                ],
                "id": 7555,
                "name": "ParameterList",
                "src": "1412:129:3"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 7556,
                "name": "ParameterList",
                "src": "1549:0:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "assignments": [
                        7558
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "index",
                          "scope": 7620,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "bytes32",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "bytes32",
                              "type": "bytes32"
                            },
                            "id": 7557,
                            "name": "ElementaryTypeName",
                            "src": "1559:7:3"
                          }
                        ],
                        "id": 7558,
                        "name": "VariableDeclaration",
                        "src": "1559:13:3"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "bytes32",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 10554,
                              "type": "function (bytes memory) pure returns (bytes32)",
                              "value": "keccak256"
                            },
                            "id": 7559,
                            "name": "Identifier",
                            "src": "1575:9:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bytes memory",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                      "typeString": "uint256[2] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                                      "typeString": "uint256[2] memory[2] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                      "typeString": "uint256[2] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                      "typeString": "uint256[2] memory"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "member_name": "encodePacked",
                                  "referencedDeclaration": null,
                                  "type": "function () pure returns (bytes memory)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 10547,
                                      "type": "abi",
                                      "value": "abi"
                                    },
                                    "id": 7560,
                                    "name": "Identifier",
                                    "src": "1585:3:3"
                                  }
                                ],
                                "id": 7561,
                                "name": "MemberAccess",
                                "src": "1585:16:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7540,
                                  "type": "uint256[2] memory",
                                  "value": "a"
                                },
                                "id": 7562,
                                "name": "Identifier",
                                "src": "1602:1:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7546,
                                  "type": "uint256[2] memory[2] memory",
                                  "value": "b"
                                },
                                "id": 7563,
                                "name": "Identifier",
                                "src": "1605:1:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7550,
                                  "type": "uint256[2] memory",
                                  "value": "c"
                                },
                                "id": 7564,
                                "name": "Identifier",
                                "src": "1608:1:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7554,
                                  "type": "uint256[2] memory",
                                  "value": "input"
                                },
                                "id": 7565,
                                "name": "Identifier",
                                "src": "1611:5:3"
                              }
                            ],
                            "id": 7566,
                            "name": "FunctionCall",
                            "src": "1585:32:3"
                          }
                        ],
                        "id": 7567,
                        "name": "FunctionCall",
                        "src": "1575:43:3"
                      }
                    ],
                    "id": 7568,
                    "name": "VariableDeclarationStatement",
                    "src": "1559:59:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_e6eaa908a56bf1d9fb54bdca8cfb18da2fa9fde71b0942492ebb42a56da61c24",
                                  "typeString": "literal_string \"Solution already exists!\""
                                }
                              ],
                              "overloadedDeclarations": [
                                10563,
                                10564
                              ],
                              "referencedDeclaration": 10564,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7569,
                            "name": "Identifier",
                            "src": "1628:7:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "!",
                              "prefix": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "bool"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7515,
                                      "type": "mapping(bytes32 => bool)",
                                      "value": "_existsMap"
                                    },
                                    "id": 7570,
                                    "name": "Identifier",
                                    "src": "1637:10:3"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7558,
                                      "type": "bytes32",
                                      "value": "index"
                                    },
                                    "id": 7571,
                                    "name": "Identifier",
                                    "src": "1648:5:3"
                                  }
                                ],
                                "id": 7572,
                                "name": "IndexAccess",
                                "src": "1637:17:3"
                              }
                            ],
                            "id": 7573,
                            "name": "UnaryOperation",
                            "src": "1636:18:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "536f6c7574696f6e20616c72656164792065786973747321",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Solution already exists!\"",
                              "value": "Solution already exists!"
                            },
                            "id": 7574,
                            "name": "Literal",
                            "src": "1656:26:3"
                          }
                        ],
                        "id": 7575,
                        "name": "FunctionCall",
                        "src": "1628:55:3"
                      }
                    ],
                    "id": 7576,
                    "name": "ExpressionStatement",
                    "src": "1628:55:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_db9868e661204c0b3f549a4734f603b51c28ceb4b4822fd2737aff5d3d776e97",
                                  "typeString": "literal_string \"Solution was not verified!\""
                                }
                              ],
                              "overloadedDeclarations": [
                                10563,
                                10564
                              ],
                              "referencedDeclaration": 10564,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7577,
                            "name": "Identifier",
                            "src": "1693:7:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bool",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                      "typeString": "uint256[2] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_array$_t_uint256_$2_memory_$2_memory_ptr",
                                      "typeString": "uint256[2] memory[2] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                      "typeString": "uint256[2] memory"
                                    },
                                    {
                                      "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                                      "typeString": "uint256[2] memory"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10217,
                                  "type": "function (uint256[2] memory,uint256[2] memory[2] memory,uint256[2] memory,uint256[2] memory) view returns (bool)",
                                  "value": "verifyTx"
                                },
                                "id": 7578,
                                "name": "Identifier",
                                "src": "1701:8:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7540,
                                  "type": "uint256[2] memory",
                                  "value": "a"
                                },
                                "id": 7579,
                                "name": "Identifier",
                                "src": "1710:1:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7546,
                                  "type": "uint256[2] memory[2] memory",
                                  "value": "b"
                                },
                                "id": 7580,
                                "name": "Identifier",
                                "src": "1713:1:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7550,
                                  "type": "uint256[2] memory",
                                  "value": "c"
                                },
                                "id": 7581,
                                "name": "Identifier",
                                "src": "1716:1:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7554,
                                  "type": "uint256[2] memory",
                                  "value": "input"
                                },
                                "id": 7582,
                                "name": "Identifier",
                                "src": "1719:5:3"
                              }
                            ],
                            "id": 7583,
                            "name": "FunctionCall",
                            "src": "1701:24:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "536f6c7574696f6e20776173206e6f7420766572696669656421",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Solution was not verified!\"",
                              "value": "Solution was not verified!"
                            },
                            "id": 7584,
                            "name": "Literal",
                            "src": "1727:28:3"
                          }
                        ],
                        "id": 7585,
                        "name": "FunctionCall",
                        "src": "1693:63:3"
                      }
                    ],
                    "id": 7586,
                    "name": "ExpressionStatement",
                    "src": "1693:63:3"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        7588
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "name": "solution",
                          "scope": 7620,
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "type": "struct SolnSquareVerifier.Solution",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "contractScope": null,
                              "name": "Solution",
                              "referencedDeclaration": 7504,
                              "type": "struct SolnSquareVerifier.Solution"
                            },
                            "id": 7587,
                            "name": "UserDefinedTypeName",
                            "src": "1767:8:3"
                          }
                        ],
                        "id": 7588,
                        "name": "VariableDeclaration",
                        "src": "1767:24:3"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": true,
                          "lValueRequested": false,
                          "names": [
                            "index",
                            "sender",
                            "token"
                          ],
                          "type": "struct SolnSquareVerifier.Solution memory",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7504,
                              "type": "type(struct SolnSquareVerifier.Solution storage pointer)",
                              "value": "Solution"
                            },
                            "id": 7589,
                            "name": "Identifier",
                            "src": "1806:8:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7558,
                              "type": "bytes32",
                              "value": "index"
                            },
                            "id": 7590,
                            "name": "Identifier",
                            "src": "1823:5:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10560,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 7591,
                                "name": "Identifier",
                                "src": "1838:3:3"
                              }
                            ],
                            "id": 7592,
                            "name": "MemberAccess",
                            "src": "1838:10:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 7593,
                            "name": "Literal",
                            "src": "1857:1:3"
                          }
                        ],
                        "id": 7594,
                        "name": "FunctionCall",
                        "src": "1806:54:3"
                      }
                    ],
                    "id": 7595,
                    "name": "VariableDeclarationStatement",
                    "src": "1767:93:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_struct$_Solution_$7504_memory_ptr",
                                  "typeString": "struct SolnSquareVerifier.Solution memory"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "push",
                              "referencedDeclaration": null,
                              "type": "function (struct SolnSquareVerifier.Solution storage ref) returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7507,
                                  "type": "struct SolnSquareVerifier.Solution storage ref[] storage ref",
                                  "value": "_solutions"
                                },
                                "id": 7596,
                                "name": "Identifier",
                                "src": "1870:10:3"
                              }
                            ],
                            "id": 7598,
                            "name": "MemberAccess",
                            "src": "1870:15:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7588,
                              "type": "struct SolnSquareVerifier.Solution memory",
                              "value": "solution"
                            },
                            "id": 7599,
                            "name": "Identifier",
                            "src": "1886:8:3"
                          }
                        ],
                        "id": 7600,
                        "name": "FunctionCall",
                        "src": "1870:25:3"
                      }
                    ],
                    "id": 7601,
                    "name": "ExpressionStatement",
                    "src": "1870:25:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7515,
                                  "type": "mapping(bytes32 => bool)",
                                  "value": "_existsMap"
                                },
                                "id": 7602,
                                "name": "Identifier",
                                "src": "1905:10:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7558,
                                  "type": "bytes32",
                                  "value": "index"
                                },
                                "id": 7603,
                                "name": "Identifier",
                                "src": "1916:5:3"
                              }
                            ],
                            "id": 7604,
                            "name": "IndexAccess",
                            "src": "1905:17:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 7605,
                            "name": "Literal",
                            "src": "1925:4:3"
                          }
                        ],
                        "id": 7606,
                        "name": "Assignment",
                        "src": "1905:24:3"
                      }
                    ],
                    "id": 7607,
                    "name": "ExpressionStatement",
                    "src": "1905:24:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "struct SolnSquareVerifier.Solution storage ref"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "type": "struct SolnSquareVerifier.Solution storage ref"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 7511,
                                  "type": "mapping(address => struct SolnSquareVerifier.Solution storage ref)",
                                  "value": "_solutionsMap"
                                },
                                "id": 7608,
                                "name": "Identifier",
                                "src": "1939:13:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 10560,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 7609,
                                    "name": "Identifier",
                                    "src": "1953:3:3"
                                  }
                                ],
                                "id": 7610,
                                "name": "MemberAccess",
                                "src": "1953:10:3"
                              }
                            ],
                            "id": 7611,
                            "name": "IndexAccess",
                            "src": "1939:25:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7588,
                              "type": "struct SolnSquareVerifier.Solution memory",
                              "value": "solution"
                            },
                            "id": 7612,
                            "name": "Identifier",
                            "src": "1967:8:3"
                          }
                        ],
                        "id": 7613,
                        "name": "Assignment",
                        "src": "1939:36:3"
                      }
                    ],
                    "id": 7614,
                    "name": "ExpressionStatement",
                    "src": "1939:36:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7519,
                              "type": "function (address)",
                              "value": "SolutionAdded"
                            },
                            "id": 7615,
                            "name": "Identifier",
                            "src": "1991:13:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 10560,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 7616,
                                "name": "Identifier",
                                "src": "2005:3:3"
                              }
                            ],
                            "id": 7617,
                            "name": "MemberAccess",
                            "src": "2005:10:3"
                          }
                        ],
                        "id": 7618,
                        "name": "FunctionCall",
                        "src": "1991:25:3"
                      }
                    ],
                    "id": 7619,
                    "name": "EmitStatement",
                    "src": "1986:30:3"
                  }
                ],
                "id": 7620,
                "name": "Block",
                "src": "1549:474:3"
              }
            ],
            "id": 7621,
            "name": "FunctionDefinition",
            "src": "1392:631:3"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "mintNFT",
              "scope": 7668,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "to",
                      "scope": 7667,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 7622,
                        "name": "ElementaryTypeName",
                        "src": "2267:7:3"
                      }
                    ],
                    "id": 7623,
                    "name": "VariableDeclaration",
                    "src": "2267:10:3"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "tokenId",
                      "scope": 7667,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 7624,
                        "name": "ElementaryTypeName",
                        "src": "2279:7:3"
                      }
                    ],
                    "id": 7625,
                    "name": "VariableDeclaration",
                    "src": "2279:15:3"
                  }
                ],
                "id": 7626,
                "name": "ParameterList",
                "src": "2266:29:3"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "minted",
                      "scope": 7667,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 7627,
                        "name": "ElementaryTypeName",
                        "src": "2312:4:3"
                      }
                    ],
                    "id": 7628,
                    "name": "VariableDeclaration",
                    "src": "2312:11:3"
                  }
                ],
                "id": 7629,
                "name": "ParameterList",
                "src": "2311:13:3"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_6b6f13b126b44756fa775c943d5fe139737fd50242b46fee15d93e5b9d151ca5",
                                  "typeString": "literal_string \"404 Solution Not Found!\""
                                }
                              ],
                              "overloadedDeclarations": [
                                10563,
                                10564
                              ],
                              "referencedDeclaration": 10564,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7630,
                            "name": "Identifier",
                            "src": "2335:7:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": ">",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "index",
                                  "referencedDeclaration": 7499,
                                  "type": "bytes32"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct SolnSquareVerifier.Solution storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7511,
                                          "type": "mapping(address => struct SolnSquareVerifier.Solution storage ref)",
                                          "value": "_solutionsMap"
                                        },
                                        "id": 7631,
                                        "name": "Identifier",
                                        "src": "2343:13:3"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7623,
                                          "type": "address",
                                          "value": "to"
                                        },
                                        "id": 7632,
                                        "name": "Identifier",
                                        "src": "2357:2:3"
                                      }
                                    ],
                                    "id": 7633,
                                    "name": "IndexAccess",
                                    "src": "2343:17:3"
                                  }
                                ],
                                "id": 7634,
                                "name": "MemberAccess",
                                "src": "2343:23:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 7635,
                                "name": "Literal",
                                "src": "2369:1:3"
                              }
                            ],
                            "id": 7636,
                            "name": "BinaryOperation",
                            "src": "2343:27:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "34303420536f6c7574696f6e204e6f7420466f756e6421",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"404 Solution Not Found!\"",
                              "value": "404 Solution Not Found!"
                            },
                            "id": 7637,
                            "name": "Literal",
                            "src": "2372:25:3"
                          }
                        ],
                        "id": 7638,
                        "name": "FunctionCall",
                        "src": "2335:63:3"
                      }
                    ],
                    "id": 7639,
                    "name": "ExpressionStatement",
                    "src": "2335:63:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_c8a73b308e584d74df42bc8d26774895f1893d571d69c5baecb3df6d0657f447",
                                  "typeString": "literal_string \"Solution already has token\""
                                }
                              ],
                              "overloadedDeclarations": [
                                10563,
                                10564
                              ],
                              "referencedDeclaration": 10564,
                              "type": "function (bool,string memory) pure",
                              "value": "require"
                            },
                            "id": 7640,
                            "name": "Identifier",
                            "src": "2408:7:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "token",
                                  "referencedDeclaration": 7503,
                                  "type": "uint256"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "type": "struct SolnSquareVerifier.Solution storage ref"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7511,
                                          "type": "mapping(address => struct SolnSquareVerifier.Solution storage ref)",
                                          "value": "_solutionsMap"
                                        },
                                        "id": 7641,
                                        "name": "Identifier",
                                        "src": "2416:13:3"
                                      },
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 7623,
                                          "type": "address",
                                          "value": "to"
                                        },
                                        "id": 7642,
                                        "name": "Identifier",
                                        "src": "2430:2:3"
                                      }
                                    ],
                                    "id": 7643,
                                    "name": "IndexAccess",
                                    "src": "2416:17:3"
                                  }
                                ],
                                "id": 7644,
                                "name": "MemberAccess",
                                "src": "2416:23:3"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "30",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 0",
                                  "value": "0"
                                },
                                "id": 7645,
                                "name": "Literal",
                                "src": "2443:1:3"
                              }
                            ],
                            "id": 7646,
                            "name": "BinaryOperation",
                            "src": "2416:28:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "536f6c7574696f6e20616c72656164792068617320746f6b656e",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "string",
                              "type": "literal_string \"Solution already has token\"",
                              "value": "Solution already has token"
                            },
                            "id": 7647,
                            "name": "Literal",
                            "src": "2446:28:3"
                          }
                        ],
                        "id": 7648,
                        "name": "FunctionCall",
                        "src": "2408:67:3"
                      }
                    ],
                    "id": 7649,
                    "name": "ExpressionStatement",
                    "src": "2408:67:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                829
                              ],
                              "referencedDeclaration": 829,
                              "type": "function (address,uint256)",
                              "value": "_mint"
                            },
                            "id": 7650,
                            "name": "Identifier",
                            "src": "2486:5:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7623,
                              "type": "address",
                              "value": "to"
                            },
                            "id": 7651,
                            "name": "Identifier",
                            "src": "2492:2:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7625,
                              "type": "uint256",
                              "value": "tokenId"
                            },
                            "id": 7652,
                            "name": "Identifier",
                            "src": "2496:7:3"
                          }
                        ],
                        "id": 7653,
                        "name": "FunctionCall",
                        "src": "2486:18:3"
                      }
                    ],
                    "id": 7654,
                    "name": "ExpressionStatement",
                    "src": "2486:18:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "token",
                              "referencedDeclaration": 7503,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "type": "struct SolnSquareVerifier.Solution storage ref"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7511,
                                      "type": "mapping(address => struct SolnSquareVerifier.Solution storage ref)",
                                      "value": "_solutionsMap"
                                    },
                                    "id": 7655,
                                    "name": "Identifier",
                                    "src": "2514:13:3"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7623,
                                      "type": "address",
                                      "value": "to"
                                    },
                                    "id": 7656,
                                    "name": "Identifier",
                                    "src": "2528:2:3"
                                  }
                                ],
                                "id": 7657,
                                "name": "IndexAccess",
                                "src": "2514:17:3"
                              }
                            ],
                            "id": 7658,
                            "name": "MemberAccess",
                            "src": "2514:23:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7625,
                              "type": "uint256",
                              "value": "tokenId"
                            },
                            "id": 7659,
                            "name": "Identifier",
                            "src": "2540:7:3"
                          }
                        ],
                        "id": 7660,
                        "name": "Assignment",
                        "src": "2514:33:3"
                      }
                    ],
                    "id": 7661,
                    "name": "ExpressionStatement",
                    "src": "2514:33:3"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bool"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 7628,
                              "type": "bool",
                              "value": "minted"
                            },
                            "id": 7662,
                            "name": "Identifier",
                            "src": "2557:6:3"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "74727565",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "bool",
                              "type": "bool",
                              "value": "true"
                            },
                            "id": 7663,
                            "name": "Literal",
                            "src": "2566:4:3"
                          }
                        ],
                        "id": 7664,
                        "name": "Assignment",
                        "src": "2557:13:3"
                      }
                    ],
                    "id": 7665,
                    "name": "ExpressionStatement",
                    "src": "2557:13:3"
                  }
                ],
                "id": 7666,
                "name": "Block",
                "src": "2325:252:3"
              }
            ],
            "id": 7667,
            "name": "FunctionDefinition",
            "src": "2250:327:3"
          }
        ],
        "id": 7668,
        "name": "ContractDefinition",
        "src": "357:2222:3"
      }
    ],
    "id": 7669,
    "name": "SourceUnit",
    "src": "0:2580:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0x3AD623405af4828884D370B2B8171ce27ca6f152",
      "transactionHash": "0xf5265bc913ff4d52c009052f50e8e01fc7e92ea9ec1d114e426a3ebb6dea2ddd"
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-04-10T17:52:27.828Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "implement supportsInterface(bytes4) using a lookup table"
      },
      "tokenByIndex(uint256)": {
        "details": "Gets the token ID at a given index of all the tokens in this contract Reverts if the index is greater or equal to the total number of tokens",
        "params": {
          "index": "uint256 representing the index to be accessed of the tokens list"
        },
        "return": "uint256 token ID at the given index of the tokens list"
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "Gets the token ID at a given index of the tokens list of the requested owner",
        "params": {
          "index": "uint256 representing the index to be accessed of the requested tokens list",
          "owner": "address owning the tokens list to be accessed"
        },
        "return": "uint256 token ID at the given index of the tokens list owned by the requested address"
      },
      "totalSupply()": {
        "details": "Gets the total amount of tokens stored by the contract",
        "return": "uint256 representing the total amount of tokens"
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}